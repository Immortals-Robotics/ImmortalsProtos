syntax = "proto3";

import "protos/immortals/common.proto";

package Protos.Immortals.Referee;

enum MatchType
{
    Unknown          = 0;
    GroupPhase       = 1;
    EliminationPhase = 2;
    Friendly         = 3;
}

enum Stage
{
    NormalFirstHalfPre   = 0;
    NormalFirstHalf      = 1;
    NormalHalfTime       = 2;
    NormalSecondHalfPre  = 3;
    NormalSecondHalf     = 4;
    ExtraTimeBreak       = 5;
    ExtraFirstHalfPre    = 6;
    ExtraFirstHalf       = 7;
    ExtraHalfTime        = 8;
    ExtraSecondHalfPre   = 9;
    ExtraSecondHalf      = 10;
    PenaltyShootoutBreak = 11;
    PenaltyShootout      = 12;
    PostGame             = 13;

    None = -1;
}

message TeamInfo
{
    string name = 1;

    uint32 score = 2;

    uint32 foul_counter = 3;

    uint32           red_cards              = 4;
    uint32           yellow_cards           = 5;
    repeated fixed64 yellow_cards_time_left = 6;

    uint32 max_allowed_robots = 7;

    uint32 ball_placement_failures         = 8;
    bool   ball_placement_failures_reached = 9;
    bool   can_place_ball                  = 10;

    uint32  timeouts_left     = 11;
    fixed64 timeout_time_left = 12;

    uint32 gk_id = 13;

    bool   substitution_intent    = 14;
    bool   substitution_allowed   = 15;
    uint32 substitutions_left     = 16;
    uint32 substitution_time_left = 17;
}

message Command
{
    uint32  id   = 1;
    fixed64 time = 2;

    uint32             type  = 3;
    optional TeamColor color = 4;
}

message State
{
    // when this state was sent on our side
    fixed64 time_sent = 1;
    // when this state was sent from game controller
    fixed64 time_gc_sent = 2;

    string source_uuid = 3;

    MatchType match_type = 10;

    Stage   stage           = 11;
    fixed64 stage_time_left = 12;

    Command command = 13;

    Vec2 place_ball_target = 14;

    TeamInfo blue_info   = 15;
    TeamInfo yellow_info = 16;
}
