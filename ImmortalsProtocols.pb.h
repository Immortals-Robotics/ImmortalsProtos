// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ImmortalsProtocols.proto

#ifndef PROTOBUF_ImmortalsProtocols_2eproto__INCLUDED
#define PROTOBUF_ImmortalsProtocols_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "messages_robocup_ssl_detection.pb.h"
#include "aidebug.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

class ballsDataMsg;
class robotDataMsg;
class gameStateMsg;
class Parameter_Set;
class Parameter_Book;
class Ai2GuiMsg;
class Gui2AiMsg;
class Gui2GLMsg;

// ===================================================================

class ballsDataMsg : public ::google::protobuf::Message {
 public:
  ballsDataMsg();
  virtual ~ballsDataMsg();

  ballsDataMsg(const ballsDataMsg& from);

  inline ballsDataMsg& operator=(const ballsDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ballsDataMsg& default_instance();

  void Swap(ballsDataMsg* other);

  // implements Message ----------------------------------------------

  ballsDataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ballsDataMsg& from);
  void MergeFrom(const ballsDataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SSL_DetectionBall balls = 1;
  inline int balls_size() const;
  inline void clear_balls();
  static const int kBallsFieldNumber = 1;
  inline const ::SSL_DetectionBall& balls(int index) const;
  inline ::SSL_DetectionBall* mutable_balls(int index);
  inline ::SSL_DetectionBall* add_balls();
  inline const ::google::protobuf::RepeatedPtrField< ::SSL_DetectionBall >&
      balls() const;
  inline ::google::protobuf::RepeatedPtrField< ::SSL_DetectionBall >*
      mutable_balls();

  // required uint32 seenState = 2;
  inline bool has_seenstate() const;
  inline void clear_seenstate();
  static const int kSeenStateFieldNumber = 2;
  inline ::google::protobuf::uint32 seenstate() const;
  inline void set_seenstate(::google::protobuf::uint32 value);

  // required float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);

  // optional float z = 5;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 5;
  inline float z() const;
  inline void set_z(float value);

  // required float vx = 6;
  inline bool has_vx() const;
  inline void clear_vx();
  static const int kVxFieldNumber = 6;
  inline float vx() const;
  inline void set_vx(float value);

  // required float vy = 7;
  inline bool has_vy() const;
  inline void clear_vy();
  static const int kVyFieldNumber = 7;
  inline float vy() const;
  inline void set_vy(float value);

  // required float vdir = 8;
  inline bool has_vdir() const;
  inline void clear_vdir();
  static const int kVdirFieldNumber = 8;
  inline float vdir() const;
  inline void set_vdir(float value);

  // required float vmag = 9;
  inline bool has_vmag() const;
  inline void clear_vmag();
  static const int kVmagFieldNumber = 9;
  inline float vmag() const;
  inline void set_vmag(float value);

  // @@protoc_insertion_point(class_scope:ballsDataMsg)
 private:
  inline void set_has_seenstate();
  inline void clear_has_seenstate();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_vx();
  inline void clear_has_vx();
  inline void set_has_vy();
  inline void clear_has_vy();
  inline void set_has_vdir();
  inline void clear_has_vdir();
  inline void set_has_vmag();
  inline void clear_has_vmag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SSL_DetectionBall > balls_;
  ::google::protobuf::uint32 seenstate_;
  float x_;
  float y_;
  float z_;
  float vx_;
  float vy_;
  float vdir_;
  float vmag_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static ballsDataMsg* default_instance_;
};
// -------------------------------------------------------------------

class robotDataMsg : public ::google::protobuf::Message {
 public:
  robotDataMsg();
  virtual ~robotDataMsg();

  robotDataMsg(const robotDataMsg& from);

  inline robotDataMsg& operator=(const robotDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const robotDataMsg& default_instance();

  void Swap(robotDataMsg* other);

  // implements Message ----------------------------------------------

  robotDataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const robotDataMsg& from);
  void MergeFrom(const robotDataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seenState = 1;
  inline bool has_seenstate() const;
  inline void clear_seenstate();
  static const int kSeenStateFieldNumber = 1;
  inline ::google::protobuf::uint32 seenstate() const;
  inline void set_seenstate(::google::protobuf::uint32 value);

  // optional uint32 robot_id = 2;
  inline bool has_robot_id() const;
  inline void clear_robot_id();
  static const int kRobotIdFieldNumber = 2;
  inline ::google::protobuf::uint32 robot_id() const;
  inline void set_robot_id(::google::protobuf::uint32 value);

  // required float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);

  // optional float orientation = 5;
  inline bool has_orientation() const;
  inline void clear_orientation();
  static const int kOrientationFieldNumber = 5;
  inline float orientation() const;
  inline void set_orientation(float value);

  // required float omega = 6;
  inline bool has_omega() const;
  inline void clear_omega();
  static const int kOmegaFieldNumber = 6;
  inline float omega() const;
  inline void set_omega(float value);

  // required float vx = 7;
  inline bool has_vx() const;
  inline void clear_vx();
  static const int kVxFieldNumber = 7;
  inline float vx() const;
  inline void set_vx(float value);

  // optional float vy = 8;
  inline bool has_vy() const;
  inline void clear_vy();
  static const int kVyFieldNumber = 8;
  inline float vy() const;
  inline void set_vy(float value);

  // required float vdir = 9;
  inline bool has_vdir() const;
  inline void clear_vdir();
  static const int kVdirFieldNumber = 9;
  inline float vdir() const;
  inline void set_vdir(float value);

  // required float vmag = 10;
  inline bool has_vmag() const;
  inline void clear_vmag();
  static const int kVmagFieldNumber = 10;
  inline float vmag() const;
  inline void set_vmag(float value);

  // required bool own = 11;
  inline bool has_own() const;
  inline void clear_own();
  static const int kOwnFieldNumber = 11;
  inline bool own() const;
  inline void set_own(bool value);

  // @@protoc_insertion_point(class_scope:robotDataMsg)
 private:
  inline void set_has_seenstate();
  inline void clear_has_seenstate();
  inline void set_has_robot_id();
  inline void clear_has_robot_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_orientation();
  inline void clear_has_orientation();
  inline void set_has_omega();
  inline void clear_has_omega();
  inline void set_has_vx();
  inline void clear_has_vx();
  inline void set_has_vy();
  inline void clear_has_vy();
  inline void set_has_vdir();
  inline void clear_has_vdir();
  inline void set_has_vmag();
  inline void clear_has_vmag();
  inline void set_has_own();
  inline void clear_has_own();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seenstate_;
  ::google::protobuf::uint32 robot_id_;
  float x_;
  float y_;
  float orientation_;
  float omega_;
  float vx_;
  float vy_;
  float vdir_;
  float vmag_;
  bool own_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static robotDataMsg* default_instance_;
};
// -------------------------------------------------------------------

class gameStateMsg : public ::google::protobuf::Message {
 public:
  gameStateMsg();
  virtual ~gameStateMsg();

  gameStateMsg(const gameStateMsg& from);

  inline gameStateMsg& operator=(const gameStateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gameStateMsg& default_instance();

  void Swap(gameStateMsg* other);

  // implements Message ----------------------------------------------

  gameStateMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gameStateMsg& from);
  void MergeFrom(const gameStateMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string refcmd = 1;
  inline bool has_refcmd() const;
  inline void clear_refcmd();
  static const int kRefcmdFieldNumber = 1;
  inline const ::std::string& refcmd() const;
  inline void set_refcmd(const ::std::string& value);
  inline void set_refcmd(const char* value);
  inline void set_refcmd(const char* value, size_t size);
  inline ::std::string* mutable_refcmd();
  inline ::std::string* release_refcmd();
  inline void set_allocated_refcmd(::std::string* refcmd);

  // required string state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::std::string& state() const;
  inline void set_state(const ::std::string& value);
  inline void set_state(const char* value);
  inline void set_state(const char* value, size_t size);
  inline ::std::string* mutable_state();
  inline ::std::string* release_state();
  inline void set_allocated_state(::std::string* state);

  // required uint32 timeRemaining = 3;
  inline bool has_timeremaining() const;
  inline void clear_timeremaining();
  static const int kTimeRemainingFieldNumber = 3;
  inline ::google::protobuf::uint32 timeremaining() const;
  inline void set_timeremaining(::google::protobuf::uint32 value);

  // required uint32 goalBlue = 4;
  inline bool has_goalblue() const;
  inline void clear_goalblue();
  static const int kGoalBlueFieldNumber = 4;
  inline ::google::protobuf::uint32 goalblue() const;
  inline void set_goalblue(::google::protobuf::uint32 value);

  // required uint32 goalYellow = 5;
  inline bool has_goalyellow() const;
  inline void clear_goalyellow();
  static const int kGoalYellowFieldNumber = 5;
  inline ::google::protobuf::uint32 goalyellow() const;
  inline void set_goalyellow(::google::protobuf::uint32 value);

  // required bool probGoalBlue = 6;
  inline bool has_probgoalblue() const;
  inline void clear_probgoalblue();
  static const int kProbGoalBlueFieldNumber = 6;
  inline bool probgoalblue() const;
  inline void set_probgoalblue(bool value);

  // required bool probGoalYellow = 7;
  inline bool has_probgoalyellow() const;
  inline void clear_probgoalyellow();
  static const int kProbGoalYellowFieldNumber = 7;
  inline bool probgoalyellow() const;
  inline void set_probgoalyellow(bool value);

  // optional bool twoDefBlue = 8;
  inline bool has_twodefblue() const;
  inline void clear_twodefblue();
  static const int kTwoDefBlueFieldNumber = 8;
  inline bool twodefblue() const;
  inline void set_twodefblue(bool value);

  // optional bool twoDefYellow = 9;
  inline bool has_twodefyellow() const;
  inline void clear_twodefyellow();
  static const int kTwoDefYellowFieldNumber = 9;
  inline bool twodefyellow() const;
  inline void set_twodefyellow(bool value);

  // optional bool probBallOut = 10;
  inline bool has_probballout() const;
  inline void clear_probballout();
  static const int kProbBallOutFieldNumber = 10;
  inline bool probballout() const;
  inline void set_probballout(bool value);

  // @@protoc_insertion_point(class_scope:gameStateMsg)
 private:
  inline void set_has_refcmd();
  inline void clear_has_refcmd();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_timeremaining();
  inline void clear_has_timeremaining();
  inline void set_has_goalblue();
  inline void clear_has_goalblue();
  inline void set_has_goalyellow();
  inline void clear_has_goalyellow();
  inline void set_has_probgoalblue();
  inline void clear_has_probgoalblue();
  inline void set_has_probgoalyellow();
  inline void clear_has_probgoalyellow();
  inline void set_has_twodefblue();
  inline void clear_has_twodefblue();
  inline void set_has_twodefyellow();
  inline void clear_has_twodefyellow();
  inline void set_has_probballout();
  inline void clear_has_probballout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* refcmd_;
  ::std::string* state_;
  ::google::protobuf::uint32 timeremaining_;
  ::google::protobuf::uint32 goalblue_;
  ::google::protobuf::uint32 goalyellow_;
  bool probgoalblue_;
  bool probgoalyellow_;
  bool twodefblue_;
  bool twodefyellow_;
  bool probballout_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static gameStateMsg* default_instance_;
};
// -------------------------------------------------------------------

class Parameter_Set : public ::google::protobuf::Message {
 public:
  Parameter_Set();
  virtual ~Parameter_Set();

  Parameter_Set(const Parameter_Set& from);

  inline Parameter_Set& operator=(const Parameter_Set& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Parameter_Set& default_instance();

  void Swap(Parameter_Set* other);

  // implements Message ----------------------------------------------

  Parameter_Set* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Parameter_Set& from);
  void MergeFrom(const Parameter_Set& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Data_Node parameter = 2;
  inline int parameter_size() const;
  inline void clear_parameter();
  static const int kParameterFieldNumber = 2;
  inline const ::Data_Node& parameter(int index) const;
  inline ::Data_Node* mutable_parameter(int index);
  inline ::Data_Node* add_parameter();
  inline const ::google::protobuf::RepeatedPtrField< ::Data_Node >&
      parameter() const;
  inline ::google::protobuf::RepeatedPtrField< ::Data_Node >*
      mutable_parameter();

  // @@protoc_insertion_point(class_scope:Parameter_Set)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Data_Node > parameter_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static Parameter_Set* default_instance_;
};
// -------------------------------------------------------------------

class Parameter_Book : public ::google::protobuf::Message {
 public:
  Parameter_Book();
  virtual ~Parameter_Book();

  Parameter_Book(const Parameter_Book& from);

  inline Parameter_Book& operator=(const Parameter_Book& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Parameter_Book& default_instance();

  void Swap(Parameter_Book* other);

  // implements Message ----------------------------------------------

  Parameter_Book* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Parameter_Book& from);
  void MergeFrom(const Parameter_Book& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Parameter_Set set = 1;
  inline int set_size() const;
  inline void clear_set();
  static const int kSetFieldNumber = 1;
  inline const ::Parameter_Set& set(int index) const;
  inline ::Parameter_Set* mutable_set(int index);
  inline ::Parameter_Set* add_set();
  inline const ::google::protobuf::RepeatedPtrField< ::Parameter_Set >&
      set() const;
  inline ::google::protobuf::RepeatedPtrField< ::Parameter_Set >*
      mutable_set();

  // @@protoc_insertion_point(class_scope:Parameter_Book)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Parameter_Set > set_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static Parameter_Book* default_instance_;
};
// -------------------------------------------------------------------

class Ai2GuiMsg : public ::google::protobuf::Message {
 public:
  Ai2GuiMsg();
  virtual ~Ai2GuiMsg();

  Ai2GuiMsg(const Ai2GuiMsg& from);

  inline Ai2GuiMsg& operator=(const Ai2GuiMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ai2GuiMsg& default_instance();

  void Swap(Ai2GuiMsg* other);

  // implements Message ----------------------------------------------

  Ai2GuiMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ai2GuiMsg& from);
  void MergeFrom(const Ai2GuiMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // required .ballsDataMsg ballsData = 2;
  inline bool has_ballsdata() const;
  inline void clear_ballsdata();
  static const int kBallsDataFieldNumber = 2;
  inline const ::ballsDataMsg& ballsdata() const;
  inline ::ballsDataMsg* mutable_ballsdata();
  inline ::ballsDataMsg* release_ballsdata();
  inline void set_allocated_ballsdata(::ballsDataMsg* ballsdata);

  // repeated .robotDataMsg robotData = 3;
  inline int robotdata_size() const;
  inline void clear_robotdata();
  static const int kRobotDataFieldNumber = 3;
  inline const ::robotDataMsg& robotdata(int index) const;
  inline ::robotDataMsg* mutable_robotdata(int index);
  inline ::robotDataMsg* add_robotdata();
  inline const ::google::protobuf::RepeatedPtrField< ::robotDataMsg >&
      robotdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::robotDataMsg >*
      mutable_robotdata();

  // optional .gameStateMsg gameState = 4;
  inline bool has_gamestate() const;
  inline void clear_gamestate();
  static const int kGameStateFieldNumber = 4;
  inline const ::gameStateMsg& gamestate() const;
  inline ::gameStateMsg* mutable_gamestate();
  inline ::gameStateMsg* release_gamestate();
  inline void set_allocated_gamestate(::gameStateMsg* gamestate);

  // optional .AI_Debug aidbgdata = 5;
  inline bool has_aidbgdata() const;
  inline void clear_aidbgdata();
  static const int kAidbgdataFieldNumber = 5;
  inline const ::AI_Debug& aidbgdata() const;
  inline ::AI_Debug* mutable_aidbgdata();
  inline ::AI_Debug* release_aidbgdata();
  inline void set_allocated_aidbgdata(::AI_Debug* aidbgdata);

  // optional .Parameter_Book params = 6;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 6;
  inline const ::Parameter_Book& params() const;
  inline ::Parameter_Book* mutable_params();
  inline ::Parameter_Book* release_params();
  inline void set_allocated_params(::Parameter_Book* params);

  // @@protoc_insertion_point(class_scope:Ai2GuiMsg)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_ballsdata();
  inline void clear_has_ballsdata();
  inline void set_has_gamestate();
  inline void clear_has_gamestate();
  inline void set_has_aidbgdata();
  inline void clear_has_aidbgdata();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ballsDataMsg* ballsdata_;
  ::google::protobuf::RepeatedPtrField< ::robotDataMsg > robotdata_;
  ::gameStateMsg* gamestate_;
  ::AI_Debug* aidbgdata_;
  ::Parameter_Book* params_;
  ::google::protobuf::int32 timestamp_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static Ai2GuiMsg* default_instance_;
};
// -------------------------------------------------------------------

class Gui2AiMsg : public ::google::protobuf::Message {
 public:
  Gui2AiMsg();
  virtual ~Gui2AiMsg();

  Gui2AiMsg(const Gui2AiMsg& from);

  inline Gui2AiMsg& operator=(const Gui2AiMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gui2AiMsg& default_instance();

  void Swap(Gui2AiMsg* other);

  // implements Message ----------------------------------------------

  Gui2AiMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gui2AiMsg& from);
  void MergeFrom(const Gui2AiMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // optional .Parameter_Book params = 2;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline const ::Parameter_Book& params() const;
  inline ::Parameter_Book* mutable_params();
  inline ::Parameter_Book* release_params();
  inline void set_allocated_params(::Parameter_Book* params);

  // repeated .Data_Node data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Data_Node& data(int index) const;
  inline ::Data_Node* mutable_data(int index);
  inline ::Data_Node* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Data_Node >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Data_Node >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Gui2AiMsg)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Parameter_Book* params_;
  ::google::protobuf::RepeatedPtrField< ::Data_Node > data_;
  ::google::protobuf::int32 timestamp_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static Gui2AiMsg* default_instance_;
};
// -------------------------------------------------------------------

class Gui2GLMsg : public ::google::protobuf::Message {
 public:
  Gui2GLMsg();
  virtual ~Gui2GLMsg();

  Gui2GLMsg(const Gui2GLMsg& from);

  inline Gui2GLMsg& operator=(const Gui2GLMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gui2GLMsg& default_instance();

  void Swap(Gui2GLMsg* other);

  // implements Message ----------------------------------------------

  Gui2GLMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gui2GLMsg& from);
  void MergeFrom(const Gui2GLMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // required .Debug_Draw draw_data = 2;
  inline bool has_draw_data() const;
  inline void clear_draw_data();
  static const int kDrawDataFieldNumber = 2;
  inline const ::Debug_Draw& draw_data() const;
  inline ::Debug_Draw* mutable_draw_data();
  inline ::Debug_Draw* release_draw_data();
  inline void set_allocated_draw_data(::Debug_Draw* draw_data);

  // optional .ballsDataMsg ballsData = 3;
  inline bool has_ballsdata() const;
  inline void clear_ballsdata();
  static const int kBallsDataFieldNumber = 3;
  inline const ::ballsDataMsg& ballsdata() const;
  inline ::ballsDataMsg* mutable_ballsdata();
  inline ::ballsDataMsg* release_ballsdata();
  inline void set_allocated_ballsdata(::ballsDataMsg* ballsdata);

  // repeated .robotDataMsg robotData = 4;
  inline int robotdata_size() const;
  inline void clear_robotdata();
  static const int kRobotDataFieldNumber = 4;
  inline const ::robotDataMsg& robotdata(int index) const;
  inline ::robotDataMsg* mutable_robotdata(int index);
  inline ::robotDataMsg* add_robotdata();
  inline const ::google::protobuf::RepeatedPtrField< ::robotDataMsg >&
      robotdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::robotDataMsg >*
      mutable_robotdata();

  // @@protoc_insertion_point(class_scope:Gui2GLMsg)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_draw_data();
  inline void clear_has_draw_data();
  inline void set_has_ballsdata();
  inline void clear_has_ballsdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Debug_Draw* draw_data_;
  ::ballsDataMsg* ballsdata_;
  ::google::protobuf::RepeatedPtrField< ::robotDataMsg > robotdata_;
  ::google::protobuf::int32 timestamp_;
  friend void  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_AssignDesc_ImmortalsProtocols_2eproto();
  friend void protobuf_ShutdownFile_ImmortalsProtocols_2eproto();

  void InitAsDefaultInstance();
  static Gui2GLMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// ballsDataMsg

// repeated .SSL_DetectionBall balls = 1;
inline int ballsDataMsg::balls_size() const {
  return balls_.size();
}
inline void ballsDataMsg::clear_balls() {
  balls_.Clear();
}
inline const ::SSL_DetectionBall& ballsDataMsg::balls(int index) const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.balls)
  return balls_.Get(index);
}
inline ::SSL_DetectionBall* ballsDataMsg::mutable_balls(int index) {
  // @@protoc_insertion_point(field_mutable:ballsDataMsg.balls)
  return balls_.Mutable(index);
}
inline ::SSL_DetectionBall* ballsDataMsg::add_balls() {
  // @@protoc_insertion_point(field_add:ballsDataMsg.balls)
  return balls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SSL_DetectionBall >&
ballsDataMsg::balls() const {
  // @@protoc_insertion_point(field_list:ballsDataMsg.balls)
  return balls_;
}
inline ::google::protobuf::RepeatedPtrField< ::SSL_DetectionBall >*
ballsDataMsg::mutable_balls() {
  // @@protoc_insertion_point(field_mutable_list:ballsDataMsg.balls)
  return &balls_;
}

// required uint32 seenState = 2;
inline bool ballsDataMsg::has_seenstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ballsDataMsg::set_has_seenstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ballsDataMsg::clear_has_seenstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ballsDataMsg::clear_seenstate() {
  seenstate_ = 0u;
  clear_has_seenstate();
}
inline ::google::protobuf::uint32 ballsDataMsg::seenstate() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.seenState)
  return seenstate_;
}
inline void ballsDataMsg::set_seenstate(::google::protobuf::uint32 value) {
  set_has_seenstate();
  seenstate_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.seenState)
}

// required float x = 3;
inline bool ballsDataMsg::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ballsDataMsg::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ballsDataMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ballsDataMsg::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float ballsDataMsg::x() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.x)
  return x_;
}
inline void ballsDataMsg::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.x)
}

// required float y = 4;
inline bool ballsDataMsg::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ballsDataMsg::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ballsDataMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ballsDataMsg::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float ballsDataMsg::y() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.y)
  return y_;
}
inline void ballsDataMsg::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.y)
}

// optional float z = 5;
inline bool ballsDataMsg::has_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ballsDataMsg::set_has_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ballsDataMsg::clear_has_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ballsDataMsg::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float ballsDataMsg::z() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.z)
  return z_;
}
inline void ballsDataMsg::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.z)
}

// required float vx = 6;
inline bool ballsDataMsg::has_vx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ballsDataMsg::set_has_vx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ballsDataMsg::clear_has_vx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ballsDataMsg::clear_vx() {
  vx_ = 0;
  clear_has_vx();
}
inline float ballsDataMsg::vx() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.vx)
  return vx_;
}
inline void ballsDataMsg::set_vx(float value) {
  set_has_vx();
  vx_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.vx)
}

// required float vy = 7;
inline bool ballsDataMsg::has_vy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ballsDataMsg::set_has_vy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ballsDataMsg::clear_has_vy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ballsDataMsg::clear_vy() {
  vy_ = 0;
  clear_has_vy();
}
inline float ballsDataMsg::vy() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.vy)
  return vy_;
}
inline void ballsDataMsg::set_vy(float value) {
  set_has_vy();
  vy_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.vy)
}

// required float vdir = 8;
inline bool ballsDataMsg::has_vdir() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ballsDataMsg::set_has_vdir() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ballsDataMsg::clear_has_vdir() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ballsDataMsg::clear_vdir() {
  vdir_ = 0;
  clear_has_vdir();
}
inline float ballsDataMsg::vdir() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.vdir)
  return vdir_;
}
inline void ballsDataMsg::set_vdir(float value) {
  set_has_vdir();
  vdir_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.vdir)
}

// required float vmag = 9;
inline bool ballsDataMsg::has_vmag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ballsDataMsg::set_has_vmag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ballsDataMsg::clear_has_vmag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ballsDataMsg::clear_vmag() {
  vmag_ = 0;
  clear_has_vmag();
}
inline float ballsDataMsg::vmag() const {
  // @@protoc_insertion_point(field_get:ballsDataMsg.vmag)
  return vmag_;
}
inline void ballsDataMsg::set_vmag(float value) {
  set_has_vmag();
  vmag_ = value;
  // @@protoc_insertion_point(field_set:ballsDataMsg.vmag)
}

// -------------------------------------------------------------------

// robotDataMsg

// required uint32 seenState = 1;
inline bool robotDataMsg::has_seenstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void robotDataMsg::set_has_seenstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void robotDataMsg::clear_has_seenstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void robotDataMsg::clear_seenstate() {
  seenstate_ = 0u;
  clear_has_seenstate();
}
inline ::google::protobuf::uint32 robotDataMsg::seenstate() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.seenState)
  return seenstate_;
}
inline void robotDataMsg::set_seenstate(::google::protobuf::uint32 value) {
  set_has_seenstate();
  seenstate_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.seenState)
}

// optional uint32 robot_id = 2;
inline bool robotDataMsg::has_robot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void robotDataMsg::set_has_robot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void robotDataMsg::clear_has_robot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void robotDataMsg::clear_robot_id() {
  robot_id_ = 0u;
  clear_has_robot_id();
}
inline ::google::protobuf::uint32 robotDataMsg::robot_id() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.robot_id)
  return robot_id_;
}
inline void robotDataMsg::set_robot_id(::google::protobuf::uint32 value) {
  set_has_robot_id();
  robot_id_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.robot_id)
}

// required float x = 3;
inline bool robotDataMsg::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void robotDataMsg::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void robotDataMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void robotDataMsg::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float robotDataMsg::x() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.x)
  return x_;
}
inline void robotDataMsg::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.x)
}

// required float y = 4;
inline bool robotDataMsg::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void robotDataMsg::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void robotDataMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void robotDataMsg::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float robotDataMsg::y() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.y)
  return y_;
}
inline void robotDataMsg::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.y)
}

// optional float orientation = 5;
inline bool robotDataMsg::has_orientation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void robotDataMsg::set_has_orientation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void robotDataMsg::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void robotDataMsg::clear_orientation() {
  orientation_ = 0;
  clear_has_orientation();
}
inline float robotDataMsg::orientation() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.orientation)
  return orientation_;
}
inline void robotDataMsg::set_orientation(float value) {
  set_has_orientation();
  orientation_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.orientation)
}

// required float omega = 6;
inline bool robotDataMsg::has_omega() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void robotDataMsg::set_has_omega() {
  _has_bits_[0] |= 0x00000020u;
}
inline void robotDataMsg::clear_has_omega() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void robotDataMsg::clear_omega() {
  omega_ = 0;
  clear_has_omega();
}
inline float robotDataMsg::omega() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.omega)
  return omega_;
}
inline void robotDataMsg::set_omega(float value) {
  set_has_omega();
  omega_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.omega)
}

// required float vx = 7;
inline bool robotDataMsg::has_vx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void robotDataMsg::set_has_vx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void robotDataMsg::clear_has_vx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void robotDataMsg::clear_vx() {
  vx_ = 0;
  clear_has_vx();
}
inline float robotDataMsg::vx() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.vx)
  return vx_;
}
inline void robotDataMsg::set_vx(float value) {
  set_has_vx();
  vx_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.vx)
}

// optional float vy = 8;
inline bool robotDataMsg::has_vy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void robotDataMsg::set_has_vy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void robotDataMsg::clear_has_vy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void robotDataMsg::clear_vy() {
  vy_ = 0;
  clear_has_vy();
}
inline float robotDataMsg::vy() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.vy)
  return vy_;
}
inline void robotDataMsg::set_vy(float value) {
  set_has_vy();
  vy_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.vy)
}

// required float vdir = 9;
inline bool robotDataMsg::has_vdir() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void robotDataMsg::set_has_vdir() {
  _has_bits_[0] |= 0x00000100u;
}
inline void robotDataMsg::clear_has_vdir() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void robotDataMsg::clear_vdir() {
  vdir_ = 0;
  clear_has_vdir();
}
inline float robotDataMsg::vdir() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.vdir)
  return vdir_;
}
inline void robotDataMsg::set_vdir(float value) {
  set_has_vdir();
  vdir_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.vdir)
}

// required float vmag = 10;
inline bool robotDataMsg::has_vmag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void robotDataMsg::set_has_vmag() {
  _has_bits_[0] |= 0x00000200u;
}
inline void robotDataMsg::clear_has_vmag() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void robotDataMsg::clear_vmag() {
  vmag_ = 0;
  clear_has_vmag();
}
inline float robotDataMsg::vmag() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.vmag)
  return vmag_;
}
inline void robotDataMsg::set_vmag(float value) {
  set_has_vmag();
  vmag_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.vmag)
}

// required bool own = 11;
inline bool robotDataMsg::has_own() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void robotDataMsg::set_has_own() {
  _has_bits_[0] |= 0x00000400u;
}
inline void robotDataMsg::clear_has_own() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void robotDataMsg::clear_own() {
  own_ = false;
  clear_has_own();
}
inline bool robotDataMsg::own() const {
  // @@protoc_insertion_point(field_get:robotDataMsg.own)
  return own_;
}
inline void robotDataMsg::set_own(bool value) {
  set_has_own();
  own_ = value;
  // @@protoc_insertion_point(field_set:robotDataMsg.own)
}

// -------------------------------------------------------------------

// gameStateMsg

// required string refcmd = 1;
inline bool gameStateMsg::has_refcmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gameStateMsg::set_has_refcmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gameStateMsg::clear_has_refcmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gameStateMsg::clear_refcmd() {
  if (refcmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    refcmd_->clear();
  }
  clear_has_refcmd();
}
inline const ::std::string& gameStateMsg::refcmd() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.refcmd)
  return *refcmd_;
}
inline void gameStateMsg::set_refcmd(const ::std::string& value) {
  set_has_refcmd();
  if (refcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    refcmd_ = new ::std::string;
  }
  refcmd_->assign(value);
  // @@protoc_insertion_point(field_set:gameStateMsg.refcmd)
}
inline void gameStateMsg::set_refcmd(const char* value) {
  set_has_refcmd();
  if (refcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    refcmd_ = new ::std::string;
  }
  refcmd_->assign(value);
  // @@protoc_insertion_point(field_set_char:gameStateMsg.refcmd)
}
inline void gameStateMsg::set_refcmd(const char* value, size_t size) {
  set_has_refcmd();
  if (refcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    refcmd_ = new ::std::string;
  }
  refcmd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gameStateMsg.refcmd)
}
inline ::std::string* gameStateMsg::mutable_refcmd() {
  set_has_refcmd();
  if (refcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    refcmd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gameStateMsg.refcmd)
  return refcmd_;
}
inline ::std::string* gameStateMsg::release_refcmd() {
  clear_has_refcmd();
  if (refcmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = refcmd_;
    refcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void gameStateMsg::set_allocated_refcmd(::std::string* refcmd) {
  if (refcmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete refcmd_;
  }
  if (refcmd) {
    set_has_refcmd();
    refcmd_ = refcmd;
  } else {
    clear_has_refcmd();
    refcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gameStateMsg.refcmd)
}

// required string state = 2;
inline bool gameStateMsg::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gameStateMsg::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gameStateMsg::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gameStateMsg::clear_state() {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_->clear();
  }
  clear_has_state();
}
inline const ::std::string& gameStateMsg::state() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.state)
  return *state_;
}
inline void gameStateMsg::set_state(const ::std::string& value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(value);
  // @@protoc_insertion_point(field_set:gameStateMsg.state)
}
inline void gameStateMsg::set_state(const char* value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(value);
  // @@protoc_insertion_point(field_set_char:gameStateMsg.state)
}
inline void gameStateMsg::set_state(const char* value, size_t size) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gameStateMsg.state)
}
inline ::std::string* gameStateMsg::mutable_state() {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:gameStateMsg.state)
  return state_;
}
inline ::std::string* gameStateMsg::release_state() {
  clear_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = state_;
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void gameStateMsg::set_allocated_state(::std::string* state) {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (state) {
    set_has_state();
    state_ = state;
  } else {
    clear_has_state();
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:gameStateMsg.state)
}

// required uint32 timeRemaining = 3;
inline bool gameStateMsg::has_timeremaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gameStateMsg::set_has_timeremaining() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gameStateMsg::clear_has_timeremaining() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gameStateMsg::clear_timeremaining() {
  timeremaining_ = 0u;
  clear_has_timeremaining();
}
inline ::google::protobuf::uint32 gameStateMsg::timeremaining() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.timeRemaining)
  return timeremaining_;
}
inline void gameStateMsg::set_timeremaining(::google::protobuf::uint32 value) {
  set_has_timeremaining();
  timeremaining_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.timeRemaining)
}

// required uint32 goalBlue = 4;
inline bool gameStateMsg::has_goalblue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gameStateMsg::set_has_goalblue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gameStateMsg::clear_has_goalblue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gameStateMsg::clear_goalblue() {
  goalblue_ = 0u;
  clear_has_goalblue();
}
inline ::google::protobuf::uint32 gameStateMsg::goalblue() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.goalBlue)
  return goalblue_;
}
inline void gameStateMsg::set_goalblue(::google::protobuf::uint32 value) {
  set_has_goalblue();
  goalblue_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.goalBlue)
}

// required uint32 goalYellow = 5;
inline bool gameStateMsg::has_goalyellow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gameStateMsg::set_has_goalyellow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gameStateMsg::clear_has_goalyellow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gameStateMsg::clear_goalyellow() {
  goalyellow_ = 0u;
  clear_has_goalyellow();
}
inline ::google::protobuf::uint32 gameStateMsg::goalyellow() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.goalYellow)
  return goalyellow_;
}
inline void gameStateMsg::set_goalyellow(::google::protobuf::uint32 value) {
  set_has_goalyellow();
  goalyellow_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.goalYellow)
}

// required bool probGoalBlue = 6;
inline bool gameStateMsg::has_probgoalblue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gameStateMsg::set_has_probgoalblue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gameStateMsg::clear_has_probgoalblue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gameStateMsg::clear_probgoalblue() {
  probgoalblue_ = false;
  clear_has_probgoalblue();
}
inline bool gameStateMsg::probgoalblue() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.probGoalBlue)
  return probgoalblue_;
}
inline void gameStateMsg::set_probgoalblue(bool value) {
  set_has_probgoalblue();
  probgoalblue_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.probGoalBlue)
}

// required bool probGoalYellow = 7;
inline bool gameStateMsg::has_probgoalyellow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gameStateMsg::set_has_probgoalyellow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gameStateMsg::clear_has_probgoalyellow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gameStateMsg::clear_probgoalyellow() {
  probgoalyellow_ = false;
  clear_has_probgoalyellow();
}
inline bool gameStateMsg::probgoalyellow() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.probGoalYellow)
  return probgoalyellow_;
}
inline void gameStateMsg::set_probgoalyellow(bool value) {
  set_has_probgoalyellow();
  probgoalyellow_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.probGoalYellow)
}

// optional bool twoDefBlue = 8;
inline bool gameStateMsg::has_twodefblue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gameStateMsg::set_has_twodefblue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gameStateMsg::clear_has_twodefblue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gameStateMsg::clear_twodefblue() {
  twodefblue_ = false;
  clear_has_twodefblue();
}
inline bool gameStateMsg::twodefblue() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.twoDefBlue)
  return twodefblue_;
}
inline void gameStateMsg::set_twodefblue(bool value) {
  set_has_twodefblue();
  twodefblue_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.twoDefBlue)
}

// optional bool twoDefYellow = 9;
inline bool gameStateMsg::has_twodefyellow() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gameStateMsg::set_has_twodefyellow() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gameStateMsg::clear_has_twodefyellow() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gameStateMsg::clear_twodefyellow() {
  twodefyellow_ = false;
  clear_has_twodefyellow();
}
inline bool gameStateMsg::twodefyellow() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.twoDefYellow)
  return twodefyellow_;
}
inline void gameStateMsg::set_twodefyellow(bool value) {
  set_has_twodefyellow();
  twodefyellow_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.twoDefYellow)
}

// optional bool probBallOut = 10;
inline bool gameStateMsg::has_probballout() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gameStateMsg::set_has_probballout() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gameStateMsg::clear_has_probballout() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gameStateMsg::clear_probballout() {
  probballout_ = false;
  clear_has_probballout();
}
inline bool gameStateMsg::probballout() const {
  // @@protoc_insertion_point(field_get:gameStateMsg.probBallOut)
  return probballout_;
}
inline void gameStateMsg::set_probballout(bool value) {
  set_has_probballout();
  probballout_ = value;
  // @@protoc_insertion_point(field_set:gameStateMsg.probBallOut)
}

// -------------------------------------------------------------------

// Parameter_Set

// required string name = 1;
inline bool Parameter_Set::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Parameter_Set::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Parameter_Set::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Parameter_Set::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Parameter_Set::name() const {
  // @@protoc_insertion_point(field_get:Parameter_Set.name)
  return *name_;
}
inline void Parameter_Set::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Parameter_Set.name)
}
inline void Parameter_Set::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Parameter_Set.name)
}
inline void Parameter_Set::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Parameter_Set.name)
}
inline ::std::string* Parameter_Set::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Parameter_Set.name)
  return name_;
}
inline ::std::string* Parameter_Set::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Parameter_Set::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Parameter_Set.name)
}

// repeated .Data_Node parameter = 2;
inline int Parameter_Set::parameter_size() const {
  return parameter_.size();
}
inline void Parameter_Set::clear_parameter() {
  parameter_.Clear();
}
inline const ::Data_Node& Parameter_Set::parameter(int index) const {
  // @@protoc_insertion_point(field_get:Parameter_Set.parameter)
  return parameter_.Get(index);
}
inline ::Data_Node* Parameter_Set::mutable_parameter(int index) {
  // @@protoc_insertion_point(field_mutable:Parameter_Set.parameter)
  return parameter_.Mutable(index);
}
inline ::Data_Node* Parameter_Set::add_parameter() {
  // @@protoc_insertion_point(field_add:Parameter_Set.parameter)
  return parameter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Data_Node >&
Parameter_Set::parameter() const {
  // @@protoc_insertion_point(field_list:Parameter_Set.parameter)
  return parameter_;
}
inline ::google::protobuf::RepeatedPtrField< ::Data_Node >*
Parameter_Set::mutable_parameter() {
  // @@protoc_insertion_point(field_mutable_list:Parameter_Set.parameter)
  return &parameter_;
}

// -------------------------------------------------------------------

// Parameter_Book

// repeated .Parameter_Set set = 1;
inline int Parameter_Book::set_size() const {
  return set_.size();
}
inline void Parameter_Book::clear_set() {
  set_.Clear();
}
inline const ::Parameter_Set& Parameter_Book::set(int index) const {
  // @@protoc_insertion_point(field_get:Parameter_Book.set)
  return set_.Get(index);
}
inline ::Parameter_Set* Parameter_Book::mutable_set(int index) {
  // @@protoc_insertion_point(field_mutable:Parameter_Book.set)
  return set_.Mutable(index);
}
inline ::Parameter_Set* Parameter_Book::add_set() {
  // @@protoc_insertion_point(field_add:Parameter_Book.set)
  return set_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Parameter_Set >&
Parameter_Book::set() const {
  // @@protoc_insertion_point(field_list:Parameter_Book.set)
  return set_;
}
inline ::google::protobuf::RepeatedPtrField< ::Parameter_Set >*
Parameter_Book::mutable_set() {
  // @@protoc_insertion_point(field_mutable_list:Parameter_Book.set)
  return &set_;
}

// -------------------------------------------------------------------

// Ai2GuiMsg

// required int32 timestamp = 1;
inline bool Ai2GuiMsg::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ai2GuiMsg::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ai2GuiMsg::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ai2GuiMsg::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 Ai2GuiMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:Ai2GuiMsg.timestamp)
  return timestamp_;
}
inline void Ai2GuiMsg::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Ai2GuiMsg.timestamp)
}

// required .ballsDataMsg ballsData = 2;
inline bool Ai2GuiMsg::has_ballsdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ai2GuiMsg::set_has_ballsdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ai2GuiMsg::clear_has_ballsdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ai2GuiMsg::clear_ballsdata() {
  if (ballsdata_ != NULL) ballsdata_->::ballsDataMsg::Clear();
  clear_has_ballsdata();
}
inline const ::ballsDataMsg& Ai2GuiMsg::ballsdata() const {
  // @@protoc_insertion_point(field_get:Ai2GuiMsg.ballsData)
  return ballsdata_ != NULL ? *ballsdata_ : *default_instance_->ballsdata_;
}
inline ::ballsDataMsg* Ai2GuiMsg::mutable_ballsdata() {
  set_has_ballsdata();
  if (ballsdata_ == NULL) ballsdata_ = new ::ballsDataMsg;
  // @@protoc_insertion_point(field_mutable:Ai2GuiMsg.ballsData)
  return ballsdata_;
}
inline ::ballsDataMsg* Ai2GuiMsg::release_ballsdata() {
  clear_has_ballsdata();
  ::ballsDataMsg* temp = ballsdata_;
  ballsdata_ = NULL;
  return temp;
}
inline void Ai2GuiMsg::set_allocated_ballsdata(::ballsDataMsg* ballsdata) {
  delete ballsdata_;
  ballsdata_ = ballsdata;
  if (ballsdata) {
    set_has_ballsdata();
  } else {
    clear_has_ballsdata();
  }
  // @@protoc_insertion_point(field_set_allocated:Ai2GuiMsg.ballsData)
}

// repeated .robotDataMsg robotData = 3;
inline int Ai2GuiMsg::robotdata_size() const {
  return robotdata_.size();
}
inline void Ai2GuiMsg::clear_robotdata() {
  robotdata_.Clear();
}
inline const ::robotDataMsg& Ai2GuiMsg::robotdata(int index) const {
  // @@protoc_insertion_point(field_get:Ai2GuiMsg.robotData)
  return robotdata_.Get(index);
}
inline ::robotDataMsg* Ai2GuiMsg::mutable_robotdata(int index) {
  // @@protoc_insertion_point(field_mutable:Ai2GuiMsg.robotData)
  return robotdata_.Mutable(index);
}
inline ::robotDataMsg* Ai2GuiMsg::add_robotdata() {
  // @@protoc_insertion_point(field_add:Ai2GuiMsg.robotData)
  return robotdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::robotDataMsg >&
Ai2GuiMsg::robotdata() const {
  // @@protoc_insertion_point(field_list:Ai2GuiMsg.robotData)
  return robotdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::robotDataMsg >*
Ai2GuiMsg::mutable_robotdata() {
  // @@protoc_insertion_point(field_mutable_list:Ai2GuiMsg.robotData)
  return &robotdata_;
}

// optional .gameStateMsg gameState = 4;
inline bool Ai2GuiMsg::has_gamestate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Ai2GuiMsg::set_has_gamestate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Ai2GuiMsg::clear_has_gamestate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Ai2GuiMsg::clear_gamestate() {
  if (gamestate_ != NULL) gamestate_->::gameStateMsg::Clear();
  clear_has_gamestate();
}
inline const ::gameStateMsg& Ai2GuiMsg::gamestate() const {
  // @@protoc_insertion_point(field_get:Ai2GuiMsg.gameState)
  return gamestate_ != NULL ? *gamestate_ : *default_instance_->gamestate_;
}
inline ::gameStateMsg* Ai2GuiMsg::mutable_gamestate() {
  set_has_gamestate();
  if (gamestate_ == NULL) gamestate_ = new ::gameStateMsg;
  // @@protoc_insertion_point(field_mutable:Ai2GuiMsg.gameState)
  return gamestate_;
}
inline ::gameStateMsg* Ai2GuiMsg::release_gamestate() {
  clear_has_gamestate();
  ::gameStateMsg* temp = gamestate_;
  gamestate_ = NULL;
  return temp;
}
inline void Ai2GuiMsg::set_allocated_gamestate(::gameStateMsg* gamestate) {
  delete gamestate_;
  gamestate_ = gamestate;
  if (gamestate) {
    set_has_gamestate();
  } else {
    clear_has_gamestate();
  }
  // @@protoc_insertion_point(field_set_allocated:Ai2GuiMsg.gameState)
}

// optional .AI_Debug aidbgdata = 5;
inline bool Ai2GuiMsg::has_aidbgdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Ai2GuiMsg::set_has_aidbgdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Ai2GuiMsg::clear_has_aidbgdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Ai2GuiMsg::clear_aidbgdata() {
  if (aidbgdata_ != NULL) aidbgdata_->::AI_Debug::Clear();
  clear_has_aidbgdata();
}
inline const ::AI_Debug& Ai2GuiMsg::aidbgdata() const {
  // @@protoc_insertion_point(field_get:Ai2GuiMsg.aidbgdata)
  return aidbgdata_ != NULL ? *aidbgdata_ : *default_instance_->aidbgdata_;
}
inline ::AI_Debug* Ai2GuiMsg::mutable_aidbgdata() {
  set_has_aidbgdata();
  if (aidbgdata_ == NULL) aidbgdata_ = new ::AI_Debug;
  // @@protoc_insertion_point(field_mutable:Ai2GuiMsg.aidbgdata)
  return aidbgdata_;
}
inline ::AI_Debug* Ai2GuiMsg::release_aidbgdata() {
  clear_has_aidbgdata();
  ::AI_Debug* temp = aidbgdata_;
  aidbgdata_ = NULL;
  return temp;
}
inline void Ai2GuiMsg::set_allocated_aidbgdata(::AI_Debug* aidbgdata) {
  delete aidbgdata_;
  aidbgdata_ = aidbgdata;
  if (aidbgdata) {
    set_has_aidbgdata();
  } else {
    clear_has_aidbgdata();
  }
  // @@protoc_insertion_point(field_set_allocated:Ai2GuiMsg.aidbgdata)
}

// optional .Parameter_Book params = 6;
inline bool Ai2GuiMsg::has_params() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Ai2GuiMsg::set_has_params() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Ai2GuiMsg::clear_has_params() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Ai2GuiMsg::clear_params() {
  if (params_ != NULL) params_->::Parameter_Book::Clear();
  clear_has_params();
}
inline const ::Parameter_Book& Ai2GuiMsg::params() const {
  // @@protoc_insertion_point(field_get:Ai2GuiMsg.params)
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::Parameter_Book* Ai2GuiMsg::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::Parameter_Book;
  // @@protoc_insertion_point(field_mutable:Ai2GuiMsg.params)
  return params_;
}
inline ::Parameter_Book* Ai2GuiMsg::release_params() {
  clear_has_params();
  ::Parameter_Book* temp = params_;
  params_ = NULL;
  return temp;
}
inline void Ai2GuiMsg::set_allocated_params(::Parameter_Book* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
  // @@protoc_insertion_point(field_set_allocated:Ai2GuiMsg.params)
}

// -------------------------------------------------------------------

// Gui2AiMsg

// required int32 timestamp = 1;
inline bool Gui2AiMsg::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gui2AiMsg::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gui2AiMsg::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gui2AiMsg::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 Gui2AiMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:Gui2AiMsg.timestamp)
  return timestamp_;
}
inline void Gui2AiMsg::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Gui2AiMsg.timestamp)
}

// optional .Parameter_Book params = 2;
inline bool Gui2AiMsg::has_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gui2AiMsg::set_has_params() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gui2AiMsg::clear_has_params() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gui2AiMsg::clear_params() {
  if (params_ != NULL) params_->::Parameter_Book::Clear();
  clear_has_params();
}
inline const ::Parameter_Book& Gui2AiMsg::params() const {
  // @@protoc_insertion_point(field_get:Gui2AiMsg.params)
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::Parameter_Book* Gui2AiMsg::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::Parameter_Book;
  // @@protoc_insertion_point(field_mutable:Gui2AiMsg.params)
  return params_;
}
inline ::Parameter_Book* Gui2AiMsg::release_params() {
  clear_has_params();
  ::Parameter_Book* temp = params_;
  params_ = NULL;
  return temp;
}
inline void Gui2AiMsg::set_allocated_params(::Parameter_Book* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
  // @@protoc_insertion_point(field_set_allocated:Gui2AiMsg.params)
}

// repeated .Data_Node data = 3;
inline int Gui2AiMsg::data_size() const {
  return data_.size();
}
inline void Gui2AiMsg::clear_data() {
  data_.Clear();
}
inline const ::Data_Node& Gui2AiMsg::data(int index) const {
  // @@protoc_insertion_point(field_get:Gui2AiMsg.data)
  return data_.Get(index);
}
inline ::Data_Node* Gui2AiMsg::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Gui2AiMsg.data)
  return data_.Mutable(index);
}
inline ::Data_Node* Gui2AiMsg::add_data() {
  // @@protoc_insertion_point(field_add:Gui2AiMsg.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Data_Node >&
Gui2AiMsg::data() const {
  // @@protoc_insertion_point(field_list:Gui2AiMsg.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Data_Node >*
Gui2AiMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Gui2AiMsg.data)
  return &data_;
}

// -------------------------------------------------------------------

// Gui2GLMsg

// required int32 timestamp = 1;
inline bool Gui2GLMsg::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gui2GLMsg::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gui2GLMsg::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gui2GLMsg::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 Gui2GLMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:Gui2GLMsg.timestamp)
  return timestamp_;
}
inline void Gui2GLMsg::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Gui2GLMsg.timestamp)
}

// required .Debug_Draw draw_data = 2;
inline bool Gui2GLMsg::has_draw_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gui2GLMsg::set_has_draw_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gui2GLMsg::clear_has_draw_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gui2GLMsg::clear_draw_data() {
  if (draw_data_ != NULL) draw_data_->::Debug_Draw::Clear();
  clear_has_draw_data();
}
inline const ::Debug_Draw& Gui2GLMsg::draw_data() const {
  // @@protoc_insertion_point(field_get:Gui2GLMsg.draw_data)
  return draw_data_ != NULL ? *draw_data_ : *default_instance_->draw_data_;
}
inline ::Debug_Draw* Gui2GLMsg::mutable_draw_data() {
  set_has_draw_data();
  if (draw_data_ == NULL) draw_data_ = new ::Debug_Draw;
  // @@protoc_insertion_point(field_mutable:Gui2GLMsg.draw_data)
  return draw_data_;
}
inline ::Debug_Draw* Gui2GLMsg::release_draw_data() {
  clear_has_draw_data();
  ::Debug_Draw* temp = draw_data_;
  draw_data_ = NULL;
  return temp;
}
inline void Gui2GLMsg::set_allocated_draw_data(::Debug_Draw* draw_data) {
  delete draw_data_;
  draw_data_ = draw_data;
  if (draw_data) {
    set_has_draw_data();
  } else {
    clear_has_draw_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Gui2GLMsg.draw_data)
}

// optional .ballsDataMsg ballsData = 3;
inline bool Gui2GLMsg::has_ballsdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Gui2GLMsg::set_has_ballsdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Gui2GLMsg::clear_has_ballsdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Gui2GLMsg::clear_ballsdata() {
  if (ballsdata_ != NULL) ballsdata_->::ballsDataMsg::Clear();
  clear_has_ballsdata();
}
inline const ::ballsDataMsg& Gui2GLMsg::ballsdata() const {
  // @@protoc_insertion_point(field_get:Gui2GLMsg.ballsData)
  return ballsdata_ != NULL ? *ballsdata_ : *default_instance_->ballsdata_;
}
inline ::ballsDataMsg* Gui2GLMsg::mutable_ballsdata() {
  set_has_ballsdata();
  if (ballsdata_ == NULL) ballsdata_ = new ::ballsDataMsg;
  // @@protoc_insertion_point(field_mutable:Gui2GLMsg.ballsData)
  return ballsdata_;
}
inline ::ballsDataMsg* Gui2GLMsg::release_ballsdata() {
  clear_has_ballsdata();
  ::ballsDataMsg* temp = ballsdata_;
  ballsdata_ = NULL;
  return temp;
}
inline void Gui2GLMsg::set_allocated_ballsdata(::ballsDataMsg* ballsdata) {
  delete ballsdata_;
  ballsdata_ = ballsdata;
  if (ballsdata) {
    set_has_ballsdata();
  } else {
    clear_has_ballsdata();
  }
  // @@protoc_insertion_point(field_set_allocated:Gui2GLMsg.ballsData)
}

// repeated .robotDataMsg robotData = 4;
inline int Gui2GLMsg::robotdata_size() const {
  return robotdata_.size();
}
inline void Gui2GLMsg::clear_robotdata() {
  robotdata_.Clear();
}
inline const ::robotDataMsg& Gui2GLMsg::robotdata(int index) const {
  // @@protoc_insertion_point(field_get:Gui2GLMsg.robotData)
  return robotdata_.Get(index);
}
inline ::robotDataMsg* Gui2GLMsg::mutable_robotdata(int index) {
  // @@protoc_insertion_point(field_mutable:Gui2GLMsg.robotData)
  return robotdata_.Mutable(index);
}
inline ::robotDataMsg* Gui2GLMsg::add_robotdata() {
  // @@protoc_insertion_point(field_add:Gui2GLMsg.robotData)
  return robotdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::robotDataMsg >&
Gui2GLMsg::robotdata() const {
  // @@protoc_insertion_point(field_list:Gui2GLMsg.robotData)
  return robotdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::robotDataMsg >*
Gui2GLMsg::mutable_robotdata() {
  // @@protoc_insertion_point(field_mutable_list:Gui2GLMsg.robotData)
  return &robotdata_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ImmortalsProtocols_2eproto__INCLUDED
