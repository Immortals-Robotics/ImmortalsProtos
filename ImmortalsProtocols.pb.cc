// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ImmortalsProtocols.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ImmortalsProtocols.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ballsDataMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ballsDataMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* robotDataMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  robotDataMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* gameStateMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gameStateMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parameter_Set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parameter_Set_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parameter_Book_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parameter_Book_reflection_ = NULL;
const ::google::protobuf::Descriptor* Ai2GuiMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ai2GuiMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Gui2AiMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Gui2AiMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Gui2GLMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Gui2GLMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ImmortalsProtocols_2eproto() {
  protobuf_AddDesc_ImmortalsProtocols_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ImmortalsProtocols.proto");
  GOOGLE_CHECK(file != NULL);
  ballsDataMsg_descriptor_ = file->message_type(0);
  static const int ballsDataMsg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, balls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, seenstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, vdir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, vmag_),
  };
  ballsDataMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ballsDataMsg_descriptor_,
      ballsDataMsg::default_instance_,
      ballsDataMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ballsDataMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ballsDataMsg));
  robotDataMsg_descriptor_ = file->message_type(1);
  static const int robotDataMsg_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, seenstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, robot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, omega_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, vdir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, vmag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, own_),
  };
  robotDataMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      robotDataMsg_descriptor_,
      robotDataMsg::default_instance_,
      robotDataMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(robotDataMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(robotDataMsg));
  gameStateMsg_descriptor_ = file->message_type(2);
  static const int gameStateMsg_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, refcmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, timeremaining_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, goalblue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, goalyellow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, probgoalblue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, probgoalyellow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, twodefblue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, twodefyellow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, probballout_),
  };
  gameStateMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      gameStateMsg_descriptor_,
      gameStateMsg::default_instance_,
      gameStateMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gameStateMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(gameStateMsg));
  Parameter_Set_descriptor_ = file->message_type(3);
  static const int Parameter_Set_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Set, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Set, parameter_),
  };
  Parameter_Set_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parameter_Set_descriptor_,
      Parameter_Set::default_instance_,
      Parameter_Set_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Set, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Set, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parameter_Set));
  Parameter_Book_descriptor_ = file->message_type(4);
  static const int Parameter_Book_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Book, set_),
  };
  Parameter_Book_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parameter_Book_descriptor_,
      Parameter_Book::default_instance_,
      Parameter_Book_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Book, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameter_Book, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parameter_Book));
  Ai2GuiMsg_descriptor_ = file->message_type(5);
  static const int Ai2GuiMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, ballsdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, robotdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, gamestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, aidbgdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, params_),
  };
  Ai2GuiMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Ai2GuiMsg_descriptor_,
      Ai2GuiMsg::default_instance_,
      Ai2GuiMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ai2GuiMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Ai2GuiMsg));
  Gui2AiMsg_descriptor_ = file->message_type(6);
  static const int Gui2AiMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2AiMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2AiMsg, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2AiMsg, data_),
  };
  Gui2AiMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Gui2AiMsg_descriptor_,
      Gui2AiMsg::default_instance_,
      Gui2AiMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2AiMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2AiMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Gui2AiMsg));
  Gui2GLMsg_descriptor_ = file->message_type(7);
  static const int Gui2GLMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2GLMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2GLMsg, draw_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2GLMsg, ballsdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2GLMsg, robotdata_),
  };
  Gui2GLMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Gui2GLMsg_descriptor_,
      Gui2GLMsg::default_instance_,
      Gui2GLMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2GLMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gui2GLMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Gui2GLMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ImmortalsProtocols_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ballsDataMsg_descriptor_, &ballsDataMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    robotDataMsg_descriptor_, &robotDataMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    gameStateMsg_descriptor_, &gameStateMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parameter_Set_descriptor_, &Parameter_Set::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parameter_Book_descriptor_, &Parameter_Book::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Ai2GuiMsg_descriptor_, &Ai2GuiMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Gui2AiMsg_descriptor_, &Gui2AiMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Gui2GLMsg_descriptor_, &Gui2GLMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ImmortalsProtocols_2eproto() {
  delete ballsDataMsg::default_instance_;
  delete ballsDataMsg_reflection_;
  delete robotDataMsg::default_instance_;
  delete robotDataMsg_reflection_;
  delete gameStateMsg::default_instance_;
  delete gameStateMsg_reflection_;
  delete Parameter_Set::default_instance_;
  delete Parameter_Set_reflection_;
  delete Parameter_Book::default_instance_;
  delete Parameter_Book_reflection_;
  delete Ai2GuiMsg::default_instance_;
  delete Ai2GuiMsg_reflection_;
  delete Gui2AiMsg::default_instance_;
  delete Gui2AiMsg_reflection_;
  delete Gui2GLMsg::default_instance_;
  delete Gui2GLMsg_reflection_;
}

void protobuf_AddDesc_ImmortalsProtocols_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_messages_5frobocup_5fssl_5fdetection_2eproto();
  ::protobuf_AddDesc_aidebug_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030ImmortalsProtocols.proto\032$messages_rob"
    "ocup_ssl_detection.proto\032\raidebug.proto\""
    "\231\001\n\014ballsDataMsg\022!\n\005balls\030\001 \003(\0132\022.SSL_De"
    "tectionBall\022\021\n\tseenState\030\002 \002(\r\022\t\n\001x\030\003 \002("
    "\002\022\t\n\001y\030\004 \002(\002\022\t\n\001z\030\005 \001(\002\022\n\n\002vx\030\006 \002(\002\022\n\n\002v"
    "y\030\007 \002(\002\022\014\n\004vdir\030\010 \002(\002\022\014\n\004vmag\030\t \002(\002\"\256\001\n\014"
    "robotDataMsg\022\021\n\tseenState\030\001 \002(\r\022\020\n\010robot"
    "_id\030\002 \001(\r\022\t\n\001x\030\003 \002(\002\022\t\n\001y\030\004 \002(\002\022\023\n\013orien"
    "tation\030\005 \001(\002\022\r\n\005omega\030\006 \002(\002\022\n\n\002vx\030\007 \002(\002\022"
    "\n\n\002vy\030\010 \001(\002\022\014\n\004vdir\030\t \002(\002\022\014\n\004vmag\030\n \002(\002\022"
    "\013\n\003own\030\013 \002(\010\"\327\001\n\014gameStateMsg\022\016\n\006refcmd\030"
    "\001 \002(\t\022\r\n\005state\030\002 \002(\t\022\025\n\rtimeRemaining\030\003 "
    "\002(\r\022\020\n\010goalBlue\030\004 \002(\r\022\022\n\ngoalYellow\030\005 \002("
    "\r\022\024\n\014probGoalBlue\030\006 \002(\010\022\026\n\016probGoalYello"
    "w\030\007 \002(\010\022\022\n\ntwoDefBlue\030\010 \001(\010\022\024\n\014twoDefYel"
    "low\030\t \001(\010\022\023\n\013probBallOut\030\n \001(\010\"<\n\rParame"
    "ter_Set\022\014\n\004name\030\001 \002(\t\022\035\n\tparameter\030\002 \003(\013"
    "2\n.Data_Node\"-\n\016Parameter_Book\022\033\n\003set\030\001 "
    "\003(\0132\016.Parameter_Set\"\303\001\n\tAi2GuiMsg\022\021\n\ttim"
    "estamp\030\001 \002(\005\022 \n\tballsData\030\002 \002(\0132\r.ballsD"
    "ataMsg\022 \n\trobotData\030\003 \003(\0132\r.robotDataMsg"
    "\022 \n\tgameState\030\004 \001(\0132\r.gameStateMsg\022\034\n\tai"
    "dbgdata\030\005 \001(\0132\t.AI_Debug\022\037\n\006params\030\006 \001(\013"
    "2\017.Parameter_Book\"Y\n\tGui2AiMsg\022\021\n\ttimest"
    "amp\030\001 \002(\005\022\037\n\006params\030\002 \001(\0132\017.Parameter_Bo"
    "ok\022\030\n\004data\030\003 \003(\0132\n.Data_Node\"\202\001\n\tGui2GLM"
    "sg\022\021\n\ttimestamp\030\001 \002(\005\022\036\n\tdraw_data\030\002 \002(\013"
    "2\013.Debug_Draw\022 \n\tballsData\030\003 \001(\0132\r.balls"
    "DataMsg\022 \n\trobotData\030\004 \003(\0132\r.robotDataMs"
    "g", 1161);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ImmortalsProtocols.proto", &protobuf_RegisterTypes);
  ballsDataMsg::default_instance_ = new ballsDataMsg();
  robotDataMsg::default_instance_ = new robotDataMsg();
  gameStateMsg::default_instance_ = new gameStateMsg();
  Parameter_Set::default_instance_ = new Parameter_Set();
  Parameter_Book::default_instance_ = new Parameter_Book();
  Ai2GuiMsg::default_instance_ = new Ai2GuiMsg();
  Gui2AiMsg::default_instance_ = new Gui2AiMsg();
  Gui2GLMsg::default_instance_ = new Gui2GLMsg();
  ballsDataMsg::default_instance_->InitAsDefaultInstance();
  robotDataMsg::default_instance_->InitAsDefaultInstance();
  gameStateMsg::default_instance_->InitAsDefaultInstance();
  Parameter_Set::default_instance_->InitAsDefaultInstance();
  Parameter_Book::default_instance_->InitAsDefaultInstance();
  Ai2GuiMsg::default_instance_->InitAsDefaultInstance();
  Gui2AiMsg::default_instance_->InitAsDefaultInstance();
  Gui2GLMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ImmortalsProtocols_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ImmortalsProtocols_2eproto {
  StaticDescriptorInitializer_ImmortalsProtocols_2eproto() {
    protobuf_AddDesc_ImmortalsProtocols_2eproto();
  }
} static_descriptor_initializer_ImmortalsProtocols_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ballsDataMsg::kBallsFieldNumber;
const int ballsDataMsg::kSeenStateFieldNumber;
const int ballsDataMsg::kXFieldNumber;
const int ballsDataMsg::kYFieldNumber;
const int ballsDataMsg::kZFieldNumber;
const int ballsDataMsg::kVxFieldNumber;
const int ballsDataMsg::kVyFieldNumber;
const int ballsDataMsg::kVdirFieldNumber;
const int ballsDataMsg::kVmagFieldNumber;
#endif  // !_MSC_VER

ballsDataMsg::ballsDataMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ballsDataMsg)
}

void ballsDataMsg::InitAsDefaultInstance() {
}

ballsDataMsg::ballsDataMsg(const ballsDataMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ballsDataMsg)
}

void ballsDataMsg::SharedCtor() {
  _cached_size_ = 0;
  seenstate_ = 0u;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  vx_ = 0;
  vy_ = 0;
  vdir_ = 0;
  vmag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ballsDataMsg::~ballsDataMsg() {
  // @@protoc_insertion_point(destructor:ballsDataMsg)
  SharedDtor();
}

void ballsDataMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ballsDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ballsDataMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ballsDataMsg_descriptor_;
}

const ballsDataMsg& ballsDataMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

ballsDataMsg* ballsDataMsg::default_instance_ = NULL;

ballsDataMsg* ballsDataMsg::New() const {
  return new ballsDataMsg;
}

void ballsDataMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ballsDataMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 254) {
    ZR_(seenstate_, vdir_);
  }
  vmag_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  balls_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ballsDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ballsDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SSL_DetectionBall balls = 1;
      case 1: {
        if (tag == 10) {
         parse_balls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_balls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_balls;
        if (input->ExpectTag(16)) goto parse_seenState;
        break;
      }

      // required uint32 seenState = 2;
      case 2: {
        if (tag == 16) {
         parse_seenState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seenstate_)));
          set_has_seenstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_x;
        break;
      }

      // required float x = 3;
      case 3: {
        if (tag == 29) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_y;
        break;
      }

      // required float y = 4;
      case 4: {
        if (tag == 37) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_z;
        break;
      }

      // optional float z = 5;
      case 5: {
        if (tag == 45) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_vx;
        break;
      }

      // required float vx = 6;
      case 6: {
        if (tag == 53) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vx_)));
          set_has_vx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_vy;
        break;
      }

      // required float vy = 7;
      case 7: {
        if (tag == 61) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vy_)));
          set_has_vy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_vdir;
        break;
      }

      // required float vdir = 8;
      case 8: {
        if (tag == 69) {
         parse_vdir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vdir_)));
          set_has_vdir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_vmag;
        break;
      }

      // required float vmag = 9;
      case 9: {
        if (tag == 77) {
         parse_vmag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vmag_)));
          set_has_vmag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ballsDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ballsDataMsg)
  return false;
#undef DO_
}

void ballsDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ballsDataMsg)
  // repeated .SSL_DetectionBall balls = 1;
  for (int i = 0; i < this->balls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->balls(i), output);
  }

  // required uint32 seenState = 2;
  if (has_seenstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seenstate(), output);
  }

  // required float x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // required float y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  // optional float z = 5;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->z(), output);
  }

  // required float vx = 6;
  if (has_vx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->vx(), output);
  }

  // required float vy = 7;
  if (has_vy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->vy(), output);
  }

  // required float vdir = 8;
  if (has_vdir()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->vdir(), output);
  }

  // required float vmag = 9;
  if (has_vmag()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->vmag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ballsDataMsg)
}

::google::protobuf::uint8* ballsDataMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ballsDataMsg)
  // repeated .SSL_DetectionBall balls = 1;
  for (int i = 0; i < this->balls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->balls(i), target);
  }

  // required uint32 seenState = 2;
  if (has_seenstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seenstate(), target);
  }

  // required float x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // required float y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  // optional float z = 5;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->z(), target);
  }

  // required float vx = 6;
  if (has_vx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->vx(), target);
  }

  // required float vy = 7;
  if (has_vy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->vy(), target);
  }

  // required float vdir = 8;
  if (has_vdir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->vdir(), target);
  }

  // required float vmag = 9;
  if (has_vmag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->vmag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ballsDataMsg)
  return target;
}

int ballsDataMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 seenState = 2;
    if (has_seenstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seenstate());
    }

    // required float x = 3;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // required float y = 4;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 5;
    if (has_z()) {
      total_size += 1 + 4;
    }

    // required float vx = 6;
    if (has_vx()) {
      total_size += 1 + 4;
    }

    // required float vy = 7;
    if (has_vy()) {
      total_size += 1 + 4;
    }

    // required float vdir = 8;
    if (has_vdir()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required float vmag = 9;
    if (has_vmag()) {
      total_size += 1 + 4;
    }

  }
  // repeated .SSL_DetectionBall balls = 1;
  total_size += 1 * this->balls_size();
  for (int i = 0; i < this->balls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->balls(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ballsDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ballsDataMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ballsDataMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ballsDataMsg::MergeFrom(const ballsDataMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  balls_.MergeFrom(from.balls_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_seenstate()) {
      set_seenstate(from.seenstate());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_vx()) {
      set_vx(from.vx());
    }
    if (from.has_vy()) {
      set_vy(from.vy());
    }
    if (from.has_vdir()) {
      set_vdir(from.vdir());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vmag()) {
      set_vmag(from.vmag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ballsDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ballsDataMsg::CopyFrom(const ballsDataMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ballsDataMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ee) != 0x000001ee) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->balls())) return false;
  return true;
}

void ballsDataMsg::Swap(ballsDataMsg* other) {
  if (other != this) {
    balls_.Swap(&other->balls_);
    std::swap(seenstate_, other->seenstate_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(vx_, other->vx_);
    std::swap(vy_, other->vy_);
    std::swap(vdir_, other->vdir_);
    std::swap(vmag_, other->vmag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ballsDataMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ballsDataMsg_descriptor_;
  metadata.reflection = ballsDataMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int robotDataMsg::kSeenStateFieldNumber;
const int robotDataMsg::kRobotIdFieldNumber;
const int robotDataMsg::kXFieldNumber;
const int robotDataMsg::kYFieldNumber;
const int robotDataMsg::kOrientationFieldNumber;
const int robotDataMsg::kOmegaFieldNumber;
const int robotDataMsg::kVxFieldNumber;
const int robotDataMsg::kVyFieldNumber;
const int robotDataMsg::kVdirFieldNumber;
const int robotDataMsg::kVmagFieldNumber;
const int robotDataMsg::kOwnFieldNumber;
#endif  // !_MSC_VER

robotDataMsg::robotDataMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:robotDataMsg)
}

void robotDataMsg::InitAsDefaultInstance() {
}

robotDataMsg::robotDataMsg(const robotDataMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:robotDataMsg)
}

void robotDataMsg::SharedCtor() {
  _cached_size_ = 0;
  seenstate_ = 0u;
  robot_id_ = 0u;
  x_ = 0;
  y_ = 0;
  orientation_ = 0;
  omega_ = 0;
  vx_ = 0;
  vy_ = 0;
  vdir_ = 0;
  vmag_ = 0;
  own_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

robotDataMsg::~robotDataMsg() {
  // @@protoc_insertion_point(destructor:robotDataMsg)
  SharedDtor();
}

void robotDataMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void robotDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* robotDataMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return robotDataMsg_descriptor_;
}

const robotDataMsg& robotDataMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

robotDataMsg* robotDataMsg::default_instance_ = NULL;

robotDataMsg* robotDataMsg::New() const {
  return new robotDataMsg;
}

void robotDataMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<robotDataMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(seenstate_, vy_);
  }
  ZR_(vdir_, own_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool robotDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robotDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seenState = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seenstate_)));
          set_has_seenstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_robot_id;
        break;
      }

      // optional uint32 robot_id = 2;
      case 2: {
        if (tag == 16) {
         parse_robot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &robot_id_)));
          set_has_robot_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_x;
        break;
      }

      // required float x = 3;
      case 3: {
        if (tag == 29) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_y;
        break;
      }

      // required float y = 4;
      case 4: {
        if (tag == 37) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_orientation;
        break;
      }

      // optional float orientation = 5;
      case 5: {
        if (tag == 45) {
         parse_orientation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
          set_has_orientation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_omega;
        break;
      }

      // required float omega = 6;
      case 6: {
        if (tag == 53) {
         parse_omega:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &omega_)));
          set_has_omega();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_vx;
        break;
      }

      // required float vx = 7;
      case 7: {
        if (tag == 61) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vx_)));
          set_has_vx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_vy;
        break;
      }

      // optional float vy = 8;
      case 8: {
        if (tag == 69) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vy_)));
          set_has_vy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_vdir;
        break;
      }

      // required float vdir = 9;
      case 9: {
        if (tag == 77) {
         parse_vdir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vdir_)));
          set_has_vdir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_vmag;
        break;
      }

      // required float vmag = 10;
      case 10: {
        if (tag == 85) {
         parse_vmag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vmag_)));
          set_has_vmag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_own;
        break;
      }

      // required bool own = 11;
      case 11: {
        if (tag == 88) {
         parse_own:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &own_)));
          set_has_own();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robotDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robotDataMsg)
  return false;
#undef DO_
}

void robotDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robotDataMsg)
  // required uint32 seenState = 1;
  if (has_seenstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seenstate(), output);
  }

  // optional uint32 robot_id = 2;
  if (has_robot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->robot_id(), output);
  }

  // required float x = 3;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // required float y = 4;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  // optional float orientation = 5;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->orientation(), output);
  }

  // required float omega = 6;
  if (has_omega()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->omega(), output);
  }

  // required float vx = 7;
  if (has_vx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->vx(), output);
  }

  // optional float vy = 8;
  if (has_vy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->vy(), output);
  }

  // required float vdir = 9;
  if (has_vdir()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->vdir(), output);
  }

  // required float vmag = 10;
  if (has_vmag()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->vmag(), output);
  }

  // required bool own = 11;
  if (has_own()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->own(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robotDataMsg)
}

::google::protobuf::uint8* robotDataMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:robotDataMsg)
  // required uint32 seenState = 1;
  if (has_seenstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seenstate(), target);
  }

  // optional uint32 robot_id = 2;
  if (has_robot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->robot_id(), target);
  }

  // required float x = 3;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // required float y = 4;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  // optional float orientation = 5;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->orientation(), target);
  }

  // required float omega = 6;
  if (has_omega()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->omega(), target);
  }

  // required float vx = 7;
  if (has_vx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->vx(), target);
  }

  // optional float vy = 8;
  if (has_vy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->vy(), target);
  }

  // required float vdir = 9;
  if (has_vdir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->vdir(), target);
  }

  // required float vmag = 10;
  if (has_vmag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->vmag(), target);
  }

  // required bool own = 11;
  if (has_own()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->own(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robotDataMsg)
  return target;
}

int robotDataMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 seenState = 1;
    if (has_seenstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seenstate());
    }

    // optional uint32 robot_id = 2;
    if (has_robot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->robot_id());
    }

    // required float x = 3;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // required float y = 4;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float orientation = 5;
    if (has_orientation()) {
      total_size += 1 + 4;
    }

    // required float omega = 6;
    if (has_omega()) {
      total_size += 1 + 4;
    }

    // required float vx = 7;
    if (has_vx()) {
      total_size += 1 + 4;
    }

    // optional float vy = 8;
    if (has_vy()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required float vdir = 9;
    if (has_vdir()) {
      total_size += 1 + 4;
    }

    // required float vmag = 10;
    if (has_vmag()) {
      total_size += 1 + 4;
    }

    // required bool own = 11;
    if (has_own()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void robotDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const robotDataMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const robotDataMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void robotDataMsg::MergeFrom(const robotDataMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seenstate()) {
      set_seenstate(from.seenstate());
    }
    if (from.has_robot_id()) {
      set_robot_id(from.robot_id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
    if (from.has_omega()) {
      set_omega(from.omega());
    }
    if (from.has_vx()) {
      set_vx(from.vx());
    }
    if (from.has_vy()) {
      set_vy(from.vy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vdir()) {
      set_vdir(from.vdir());
    }
    if (from.has_vmag()) {
      set_vmag(from.vmag());
    }
    if (from.has_own()) {
      set_own(from.own());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void robotDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void robotDataMsg::CopyFrom(const robotDataMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool robotDataMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000076d) != 0x0000076d) return false;

  return true;
}

void robotDataMsg::Swap(robotDataMsg* other) {
  if (other != this) {
    std::swap(seenstate_, other->seenstate_);
    std::swap(robot_id_, other->robot_id_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(orientation_, other->orientation_);
    std::swap(omega_, other->omega_);
    std::swap(vx_, other->vx_);
    std::swap(vy_, other->vy_);
    std::swap(vdir_, other->vdir_);
    std::swap(vmag_, other->vmag_);
    std::swap(own_, other->own_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata robotDataMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = robotDataMsg_descriptor_;
  metadata.reflection = robotDataMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int gameStateMsg::kRefcmdFieldNumber;
const int gameStateMsg::kStateFieldNumber;
const int gameStateMsg::kTimeRemainingFieldNumber;
const int gameStateMsg::kGoalBlueFieldNumber;
const int gameStateMsg::kGoalYellowFieldNumber;
const int gameStateMsg::kProbGoalBlueFieldNumber;
const int gameStateMsg::kProbGoalYellowFieldNumber;
const int gameStateMsg::kTwoDefBlueFieldNumber;
const int gameStateMsg::kTwoDefYellowFieldNumber;
const int gameStateMsg::kProbBallOutFieldNumber;
#endif  // !_MSC_VER

gameStateMsg::gameStateMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gameStateMsg)
}

void gameStateMsg::InitAsDefaultInstance() {
}

gameStateMsg::gameStateMsg(const gameStateMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gameStateMsg)
}

void gameStateMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  refcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeremaining_ = 0u;
  goalblue_ = 0u;
  goalyellow_ = 0u;
  probgoalblue_ = false;
  probgoalyellow_ = false;
  twodefblue_ = false;
  twodefyellow_ = false;
  probballout_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gameStateMsg::~gameStateMsg() {
  // @@protoc_insertion_point(destructor:gameStateMsg)
  SharedDtor();
}

void gameStateMsg::SharedDtor() {
  if (refcmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete refcmd_;
  }
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (this != default_instance_) {
  }
}

void gameStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gameStateMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gameStateMsg_descriptor_;
}

const gameStateMsg& gameStateMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

gameStateMsg* gameStateMsg::default_instance_ = NULL;

gameStateMsg* gameStateMsg::New() const {
  return new gameStateMsg;
}

void gameStateMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<gameStateMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(timeremaining_, twodefblue_);
    if (has_refcmd()) {
      if (refcmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        refcmd_->clear();
      }
    }
    if (has_state()) {
      if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        state_->clear();
      }
    }
  }
  ZR_(twodefyellow_, probballout_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool gameStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gameStateMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string refcmd = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refcmd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->refcmd().data(), this->refcmd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "refcmd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }

      // required string state = 2;
      case 2: {
        if (tag == 18) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "state");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timeRemaining;
        break;
      }

      // required uint32 timeRemaining = 3;
      case 3: {
        if (tag == 24) {
         parse_timeRemaining:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeremaining_)));
          set_has_timeremaining();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_goalBlue;
        break;
      }

      // required uint32 goalBlue = 4;
      case 4: {
        if (tag == 32) {
         parse_goalBlue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goalblue_)));
          set_has_goalblue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_goalYellow;
        break;
      }

      // required uint32 goalYellow = 5;
      case 5: {
        if (tag == 40) {
         parse_goalYellow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goalyellow_)));
          set_has_goalyellow();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_probGoalBlue;
        break;
      }

      // required bool probGoalBlue = 6;
      case 6: {
        if (tag == 48) {
         parse_probGoalBlue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &probgoalblue_)));
          set_has_probgoalblue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_probGoalYellow;
        break;
      }

      // required bool probGoalYellow = 7;
      case 7: {
        if (tag == 56) {
         parse_probGoalYellow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &probgoalyellow_)));
          set_has_probgoalyellow();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_twoDefBlue;
        break;
      }

      // optional bool twoDefBlue = 8;
      case 8: {
        if (tag == 64) {
         parse_twoDefBlue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twodefblue_)));
          set_has_twodefblue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_twoDefYellow;
        break;
      }

      // optional bool twoDefYellow = 9;
      case 9: {
        if (tag == 72) {
         parse_twoDefYellow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twodefyellow_)));
          set_has_twodefyellow();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_probBallOut;
        break;
      }

      // optional bool probBallOut = 10;
      case 10: {
        if (tag == 80) {
         parse_probBallOut:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &probballout_)));
          set_has_probballout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gameStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gameStateMsg)
  return false;
#undef DO_
}

void gameStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gameStateMsg)
  // required string refcmd = 1;
  if (has_refcmd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->refcmd().data(), this->refcmd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "refcmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->refcmd(), output);
  }

  // required string state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->state(), output);
  }

  // required uint32 timeRemaining = 3;
  if (has_timeremaining()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timeremaining(), output);
  }

  // required uint32 goalBlue = 4;
  if (has_goalblue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->goalblue(), output);
  }

  // required uint32 goalYellow = 5;
  if (has_goalyellow()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->goalyellow(), output);
  }

  // required bool probGoalBlue = 6;
  if (has_probgoalblue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->probgoalblue(), output);
  }

  // required bool probGoalYellow = 7;
  if (has_probgoalyellow()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->probgoalyellow(), output);
  }

  // optional bool twoDefBlue = 8;
  if (has_twodefblue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->twodefblue(), output);
  }

  // optional bool twoDefYellow = 9;
  if (has_twodefyellow()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->twodefyellow(), output);
  }

  // optional bool probBallOut = 10;
  if (has_probballout()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->probballout(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gameStateMsg)
}

::google::protobuf::uint8* gameStateMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gameStateMsg)
  // required string refcmd = 1;
  if (has_refcmd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->refcmd().data(), this->refcmd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "refcmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->refcmd(), target);
  }

  // required string state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->state(), target);
  }

  // required uint32 timeRemaining = 3;
  if (has_timeremaining()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timeremaining(), target);
  }

  // required uint32 goalBlue = 4;
  if (has_goalblue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->goalblue(), target);
  }

  // required uint32 goalYellow = 5;
  if (has_goalyellow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->goalyellow(), target);
  }

  // required bool probGoalBlue = 6;
  if (has_probgoalblue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->probgoalblue(), target);
  }

  // required bool probGoalYellow = 7;
  if (has_probgoalyellow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->probgoalyellow(), target);
  }

  // optional bool twoDefBlue = 8;
  if (has_twodefblue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->twodefblue(), target);
  }

  // optional bool twoDefYellow = 9;
  if (has_twodefyellow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->twodefyellow(), target);
  }

  // optional bool probBallOut = 10;
  if (has_probballout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->probballout(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gameStateMsg)
  return target;
}

int gameStateMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string refcmd = 1;
    if (has_refcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->refcmd());
    }

    // required string state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // required uint32 timeRemaining = 3;
    if (has_timeremaining()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeremaining());
    }

    // required uint32 goalBlue = 4;
    if (has_goalblue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goalblue());
    }

    // required uint32 goalYellow = 5;
    if (has_goalyellow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goalyellow());
    }

    // required bool probGoalBlue = 6;
    if (has_probgoalblue()) {
      total_size += 1 + 1;
    }

    // required bool probGoalYellow = 7;
    if (has_probgoalyellow()) {
      total_size += 1 + 1;
    }

    // optional bool twoDefBlue = 8;
    if (has_twodefblue()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool twoDefYellow = 9;
    if (has_twodefyellow()) {
      total_size += 1 + 1;
    }

    // optional bool probBallOut = 10;
    if (has_probballout()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gameStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const gameStateMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gameStateMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gameStateMsg::MergeFrom(const gameStateMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refcmd()) {
      set_refcmd(from.refcmd());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_timeremaining()) {
      set_timeremaining(from.timeremaining());
    }
    if (from.has_goalblue()) {
      set_goalblue(from.goalblue());
    }
    if (from.has_goalyellow()) {
      set_goalyellow(from.goalyellow());
    }
    if (from.has_probgoalblue()) {
      set_probgoalblue(from.probgoalblue());
    }
    if (from.has_probgoalyellow()) {
      set_probgoalyellow(from.probgoalyellow());
    }
    if (from.has_twodefblue()) {
      set_twodefblue(from.twodefblue());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_twodefyellow()) {
      set_twodefyellow(from.twodefyellow());
    }
    if (from.has_probballout()) {
      set_probballout(from.probballout());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void gameStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gameStateMsg::CopyFrom(const gameStateMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gameStateMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void gameStateMsg::Swap(gameStateMsg* other) {
  if (other != this) {
    std::swap(refcmd_, other->refcmd_);
    std::swap(state_, other->state_);
    std::swap(timeremaining_, other->timeremaining_);
    std::swap(goalblue_, other->goalblue_);
    std::swap(goalyellow_, other->goalyellow_);
    std::swap(probgoalblue_, other->probgoalblue_);
    std::swap(probgoalyellow_, other->probgoalyellow_);
    std::swap(twodefblue_, other->twodefblue_);
    std::swap(twodefyellow_, other->twodefyellow_);
    std::swap(probballout_, other->probballout_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata gameStateMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gameStateMsg_descriptor_;
  metadata.reflection = gameStateMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Parameter_Set::kNameFieldNumber;
const int Parameter_Set::kParameterFieldNumber;
#endif  // !_MSC_VER

Parameter_Set::Parameter_Set()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parameter_Set)
}

void Parameter_Set::InitAsDefaultInstance() {
}

Parameter_Set::Parameter_Set(const Parameter_Set& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Parameter_Set)
}

void Parameter_Set::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parameter_Set::~Parameter_Set() {
  // @@protoc_insertion_point(destructor:Parameter_Set)
  SharedDtor();
}

void Parameter_Set::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Parameter_Set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parameter_Set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parameter_Set_descriptor_;
}

const Parameter_Set& Parameter_Set::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

Parameter_Set* Parameter_Set::default_instance_ = NULL;

Parameter_Set* Parameter_Set::New() const {
  return new Parameter_Set;
}

void Parameter_Set::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  parameter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parameter_Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parameter_Set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parameter;
        break;
      }

      // repeated .Data_Node parameter = 2;
      case 2: {
        if (tag == 18) {
         parse_parameter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parameter;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parameter_Set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parameter_Set)
  return false;
#undef DO_
}

void Parameter_Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parameter_Set)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Data_Node parameter = 2;
  for (int i = 0; i < this->parameter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parameter(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Parameter_Set)
}

::google::protobuf::uint8* Parameter_Set::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Parameter_Set)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Data_Node parameter = 2;
  for (int i = 0; i < this->parameter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parameter(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parameter_Set)
  return target;
}

int Parameter_Set::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .Data_Node parameter = 2;
  total_size += 1 * this->parameter_size();
  for (int i = 0; i < this->parameter_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameter(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parameter_Set::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parameter_Set* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parameter_Set*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parameter_Set::MergeFrom(const Parameter_Set& from) {
  GOOGLE_CHECK_NE(&from, this);
  parameter_.MergeFrom(from.parameter_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parameter_Set::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter_Set::CopyFrom(const Parameter_Set& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter_Set::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->parameter())) return false;
  return true;
}

void Parameter_Set::Swap(Parameter_Set* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    parameter_.Swap(&other->parameter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parameter_Set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parameter_Set_descriptor_;
  metadata.reflection = Parameter_Set_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Parameter_Book::kSetFieldNumber;
#endif  // !_MSC_VER

Parameter_Book::Parameter_Book()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parameter_Book)
}

void Parameter_Book::InitAsDefaultInstance() {
}

Parameter_Book::Parameter_Book(const Parameter_Book& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Parameter_Book)
}

void Parameter_Book::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parameter_Book::~Parameter_Book() {
  // @@protoc_insertion_point(destructor:Parameter_Book)
  SharedDtor();
}

void Parameter_Book::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Parameter_Book::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parameter_Book::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parameter_Book_descriptor_;
}

const Parameter_Book& Parameter_Book::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

Parameter_Book* Parameter_Book::default_instance_ = NULL;

Parameter_Book* Parameter_Book::New() const {
  return new Parameter_Book;
}

void Parameter_Book::Clear() {
  set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parameter_Book::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parameter_Book)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Parameter_Set set = 1;
      case 1: {
        if (tag == 10) {
         parse_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_set()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_set;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parameter_Book)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parameter_Book)
  return false;
#undef DO_
}

void Parameter_Book::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parameter_Book)
  // repeated .Parameter_Set set = 1;
  for (int i = 0; i < this->set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->set(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Parameter_Book)
}

::google::protobuf::uint8* Parameter_Book::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Parameter_Book)
  // repeated .Parameter_Set set = 1;
  for (int i = 0; i < this->set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->set(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parameter_Book)
  return target;
}

int Parameter_Book::ByteSize() const {
  int total_size = 0;

  // repeated .Parameter_Set set = 1;
  total_size += 1 * this->set_size();
  for (int i = 0; i < this->set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->set(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parameter_Book::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parameter_Book* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parameter_Book*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parameter_Book::MergeFrom(const Parameter_Book& from) {
  GOOGLE_CHECK_NE(&from, this);
  set_.MergeFrom(from.set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parameter_Book::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter_Book::CopyFrom(const Parameter_Book& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter_Book::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->set())) return false;
  return true;
}

void Parameter_Book::Swap(Parameter_Book* other) {
  if (other != this) {
    set_.Swap(&other->set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parameter_Book::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parameter_Book_descriptor_;
  metadata.reflection = Parameter_Book_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Ai2GuiMsg::kTimestampFieldNumber;
const int Ai2GuiMsg::kBallsDataFieldNumber;
const int Ai2GuiMsg::kRobotDataFieldNumber;
const int Ai2GuiMsg::kGameStateFieldNumber;
const int Ai2GuiMsg::kAidbgdataFieldNumber;
const int Ai2GuiMsg::kParamsFieldNumber;
#endif  // !_MSC_VER

Ai2GuiMsg::Ai2GuiMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Ai2GuiMsg)
}

void Ai2GuiMsg::InitAsDefaultInstance() {
  ballsdata_ = const_cast< ::ballsDataMsg*>(&::ballsDataMsg::default_instance());
  gamestate_ = const_cast< ::gameStateMsg*>(&::gameStateMsg::default_instance());
  aidbgdata_ = const_cast< ::AI_Debug*>(&::AI_Debug::default_instance());
  params_ = const_cast< ::Parameter_Book*>(&::Parameter_Book::default_instance());
}

Ai2GuiMsg::Ai2GuiMsg(const Ai2GuiMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Ai2GuiMsg)
}

void Ai2GuiMsg::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = 0;
  ballsdata_ = NULL;
  gamestate_ = NULL;
  aidbgdata_ = NULL;
  params_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Ai2GuiMsg::~Ai2GuiMsg() {
  // @@protoc_insertion_point(destructor:Ai2GuiMsg)
  SharedDtor();
}

void Ai2GuiMsg::SharedDtor() {
  if (this != default_instance_) {
    delete ballsdata_;
    delete gamestate_;
    delete aidbgdata_;
    delete params_;
  }
}

void Ai2GuiMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ai2GuiMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ai2GuiMsg_descriptor_;
}

const Ai2GuiMsg& Ai2GuiMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

Ai2GuiMsg* Ai2GuiMsg::default_instance_ = NULL;

Ai2GuiMsg* Ai2GuiMsg::New() const {
  return new Ai2GuiMsg;
}

void Ai2GuiMsg::Clear() {
  if (_has_bits_[0 / 32] & 59) {
    timestamp_ = 0;
    if (has_ballsdata()) {
      if (ballsdata_ != NULL) ballsdata_->::ballsDataMsg::Clear();
    }
    if (has_gamestate()) {
      if (gamestate_ != NULL) gamestate_->::gameStateMsg::Clear();
    }
    if (has_aidbgdata()) {
      if (aidbgdata_ != NULL) aidbgdata_->::AI_Debug::Clear();
    }
    if (has_params()) {
      if (params_ != NULL) params_->::Parameter_Book::Clear();
    }
  }
  robotdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Ai2GuiMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Ai2GuiMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ballsData;
        break;
      }

      // required .ballsDataMsg ballsData = 2;
      case 2: {
        if (tag == 18) {
         parse_ballsData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ballsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_robotData;
        break;
      }

      // repeated .robotDataMsg robotData = 3;
      case 3: {
        if (tag == 26) {
         parse_robotData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robotdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_robotData;
        if (input->ExpectTag(34)) goto parse_gameState;
        break;
      }

      // optional .gameStateMsg gameState = 4;
      case 4: {
        if (tag == 34) {
         parse_gameState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamestate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_aidbgdata;
        break;
      }

      // optional .AI_Debug aidbgdata = 5;
      case 5: {
        if (tag == 42) {
         parse_aidbgdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aidbgdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_params;
        break;
      }

      // optional .Parameter_Book params = 6;
      case 6: {
        if (tag == 50) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Ai2GuiMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Ai2GuiMsg)
  return false;
#undef DO_
}

void Ai2GuiMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Ai2GuiMsg)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  // required .ballsDataMsg ballsData = 2;
  if (has_ballsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ballsdata(), output);
  }

  // repeated .robotDataMsg robotData = 3;
  for (int i = 0; i < this->robotdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->robotdata(i), output);
  }

  // optional .gameStateMsg gameState = 4;
  if (has_gamestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gamestate(), output);
  }

  // optional .AI_Debug aidbgdata = 5;
  if (has_aidbgdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->aidbgdata(), output);
  }

  // optional .Parameter_Book params = 6;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->params(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Ai2GuiMsg)
}

::google::protobuf::uint8* Ai2GuiMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Ai2GuiMsg)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  // required .ballsDataMsg ballsData = 2;
  if (has_ballsdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->ballsdata(), target);
  }

  // repeated .robotDataMsg robotData = 3;
  for (int i = 0; i < this->robotdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->robotdata(i), target);
  }

  // optional .gameStateMsg gameState = 4;
  if (has_gamestate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->gamestate(), target);
  }

  // optional .AI_Debug aidbgdata = 5;
  if (has_aidbgdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->aidbgdata(), target);
  }

  // optional .Parameter_Book params = 6;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->params(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ai2GuiMsg)
  return target;
}

int Ai2GuiMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestamp());
    }

    // required .ballsDataMsg ballsData = 2;
    if (has_ballsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ballsdata());
    }

    // optional .gameStateMsg gameState = 4;
    if (has_gamestate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gamestate());
    }

    // optional .AI_Debug aidbgdata = 5;
    if (has_aidbgdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->aidbgdata());
    }

    // optional .Parameter_Book params = 6;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params());
    }

  }
  // repeated .robotDataMsg robotData = 3;
  total_size += 1 * this->robotdata_size();
  for (int i = 0; i < this->robotdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robotdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ai2GuiMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Ai2GuiMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Ai2GuiMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Ai2GuiMsg::MergeFrom(const Ai2GuiMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  robotdata_.MergeFrom(from.robotdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_ballsdata()) {
      mutable_ballsdata()->::ballsDataMsg::MergeFrom(from.ballsdata());
    }
    if (from.has_gamestate()) {
      mutable_gamestate()->::gameStateMsg::MergeFrom(from.gamestate());
    }
    if (from.has_aidbgdata()) {
      mutable_aidbgdata()->::AI_Debug::MergeFrom(from.aidbgdata());
    }
    if (from.has_params()) {
      mutable_params()->::Parameter_Book::MergeFrom(from.params());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Ai2GuiMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ai2GuiMsg::CopyFrom(const Ai2GuiMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ai2GuiMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_ballsdata()) {
    if (!this->ballsdata().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->robotdata())) return false;
  if (has_gamestate()) {
    if (!this->gamestate().IsInitialized()) return false;
  }
  if (has_aidbgdata()) {
    if (!this->aidbgdata().IsInitialized()) return false;
  }
  if (has_params()) {
    if (!this->params().IsInitialized()) return false;
  }
  return true;
}

void Ai2GuiMsg::Swap(Ai2GuiMsg* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(ballsdata_, other->ballsdata_);
    robotdata_.Swap(&other->robotdata_);
    std::swap(gamestate_, other->gamestate_);
    std::swap(aidbgdata_, other->aidbgdata_);
    std::swap(params_, other->params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Ai2GuiMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ai2GuiMsg_descriptor_;
  metadata.reflection = Ai2GuiMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Gui2AiMsg::kTimestampFieldNumber;
const int Gui2AiMsg::kParamsFieldNumber;
const int Gui2AiMsg::kDataFieldNumber;
#endif  // !_MSC_VER

Gui2AiMsg::Gui2AiMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gui2AiMsg)
}

void Gui2AiMsg::InitAsDefaultInstance() {
  params_ = const_cast< ::Parameter_Book*>(&::Parameter_Book::default_instance());
}

Gui2AiMsg::Gui2AiMsg(const Gui2AiMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Gui2AiMsg)
}

void Gui2AiMsg::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = 0;
  params_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Gui2AiMsg::~Gui2AiMsg() {
  // @@protoc_insertion_point(destructor:Gui2AiMsg)
  SharedDtor();
}

void Gui2AiMsg::SharedDtor() {
  if (this != default_instance_) {
    delete params_;
  }
}

void Gui2AiMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gui2AiMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Gui2AiMsg_descriptor_;
}

const Gui2AiMsg& Gui2AiMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

Gui2AiMsg* Gui2AiMsg::default_instance_ = NULL;

Gui2AiMsg* Gui2AiMsg::New() const {
  return new Gui2AiMsg;
}

void Gui2AiMsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    timestamp_ = 0;
    if (has_params()) {
      if (params_ != NULL) params_->::Parameter_Book::Clear();
    }
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Gui2AiMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gui2AiMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // optional .Parameter_Book params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .Data_Node data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gui2AiMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gui2AiMsg)
  return false;
#undef DO_
}

void Gui2AiMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gui2AiMsg)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  // optional .Parameter_Book params = 2;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(), output);
  }

  // repeated .Data_Node data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gui2AiMsg)
}

::google::protobuf::uint8* Gui2AiMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gui2AiMsg)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  // optional .Parameter_Book params = 2;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->params(), target);
  }

  // repeated .Data_Node data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gui2AiMsg)
  return target;
}

int Gui2AiMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestamp());
    }

    // optional .Parameter_Book params = 2;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params());
    }

  }
  // repeated .Data_Node data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gui2AiMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Gui2AiMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Gui2AiMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Gui2AiMsg::MergeFrom(const Gui2AiMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_params()) {
      mutable_params()->::Parameter_Book::MergeFrom(from.params());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Gui2AiMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gui2AiMsg::CopyFrom(const Gui2AiMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gui2AiMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_params()) {
    if (!this->params().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void Gui2AiMsg::Swap(Gui2AiMsg* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(params_, other->params_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Gui2AiMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Gui2AiMsg_descriptor_;
  metadata.reflection = Gui2AiMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Gui2GLMsg::kTimestampFieldNumber;
const int Gui2GLMsg::kDrawDataFieldNumber;
const int Gui2GLMsg::kBallsDataFieldNumber;
const int Gui2GLMsg::kRobotDataFieldNumber;
#endif  // !_MSC_VER

Gui2GLMsg::Gui2GLMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gui2GLMsg)
}

void Gui2GLMsg::InitAsDefaultInstance() {
  draw_data_ = const_cast< ::Debug_Draw*>(&::Debug_Draw::default_instance());
  ballsdata_ = const_cast< ::ballsDataMsg*>(&::ballsDataMsg::default_instance());
}

Gui2GLMsg::Gui2GLMsg(const Gui2GLMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Gui2GLMsg)
}

void Gui2GLMsg::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = 0;
  draw_data_ = NULL;
  ballsdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Gui2GLMsg::~Gui2GLMsg() {
  // @@protoc_insertion_point(destructor:Gui2GLMsg)
  SharedDtor();
}

void Gui2GLMsg::SharedDtor() {
  if (this != default_instance_) {
    delete draw_data_;
    delete ballsdata_;
  }
}

void Gui2GLMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gui2GLMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Gui2GLMsg_descriptor_;
}

const Gui2GLMsg& Gui2GLMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ImmortalsProtocols_2eproto();
  return *default_instance_;
}

Gui2GLMsg* Gui2GLMsg::default_instance_ = NULL;

Gui2GLMsg* Gui2GLMsg::New() const {
  return new Gui2GLMsg;
}

void Gui2GLMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    timestamp_ = 0;
    if (has_draw_data()) {
      if (draw_data_ != NULL) draw_data_->::Debug_Draw::Clear();
    }
    if (has_ballsdata()) {
      if (ballsdata_ != NULL) ballsdata_->::ballsDataMsg::Clear();
    }
  }
  robotdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Gui2GLMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gui2GLMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_draw_data;
        break;
      }

      // required .Debug_Draw draw_data = 2;
      case 2: {
        if (tag == 18) {
         parse_draw_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_draw_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ballsData;
        break;
      }

      // optional .ballsDataMsg ballsData = 3;
      case 3: {
        if (tag == 26) {
         parse_ballsData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ballsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_robotData;
        break;
      }

      // repeated .robotDataMsg robotData = 4;
      case 4: {
        if (tag == 34) {
         parse_robotData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robotdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_robotData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gui2GLMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gui2GLMsg)
  return false;
#undef DO_
}

void Gui2GLMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gui2GLMsg)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  // required .Debug_Draw draw_data = 2;
  if (has_draw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->draw_data(), output);
  }

  // optional .ballsDataMsg ballsData = 3;
  if (has_ballsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ballsdata(), output);
  }

  // repeated .robotDataMsg robotData = 4;
  for (int i = 0; i < this->robotdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->robotdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gui2GLMsg)
}

::google::protobuf::uint8* Gui2GLMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gui2GLMsg)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  // required .Debug_Draw draw_data = 2;
  if (has_draw_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->draw_data(), target);
  }

  // optional .ballsDataMsg ballsData = 3;
  if (has_ballsdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->ballsdata(), target);
  }

  // repeated .robotDataMsg robotData = 4;
  for (int i = 0; i < this->robotdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->robotdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gui2GLMsg)
  return target;
}

int Gui2GLMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestamp());
    }

    // required .Debug_Draw draw_data = 2;
    if (has_draw_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->draw_data());
    }

    // optional .ballsDataMsg ballsData = 3;
    if (has_ballsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ballsdata());
    }

  }
  // repeated .robotDataMsg robotData = 4;
  total_size += 1 * this->robotdata_size();
  for (int i = 0; i < this->robotdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robotdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gui2GLMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Gui2GLMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Gui2GLMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Gui2GLMsg::MergeFrom(const Gui2GLMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  robotdata_.MergeFrom(from.robotdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_draw_data()) {
      mutable_draw_data()->::Debug_Draw::MergeFrom(from.draw_data());
    }
    if (from.has_ballsdata()) {
      mutable_ballsdata()->::ballsDataMsg::MergeFrom(from.ballsdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Gui2GLMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gui2GLMsg::CopyFrom(const Gui2GLMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gui2GLMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_draw_data()) {
    if (!this->draw_data().IsInitialized()) return false;
  }
  if (has_ballsdata()) {
    if (!this->ballsdata().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->robotdata())) return false;
  return true;
}

void Gui2GLMsg::Swap(Gui2GLMsg* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(draw_data_, other->draw_data_);
    std::swap(ballsdata_, other->ballsdata_);
    robotdata_.Swap(&other->robotdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Gui2GLMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Gui2GLMsg_descriptor_;
  metadata.reflection = Gui2GLMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
